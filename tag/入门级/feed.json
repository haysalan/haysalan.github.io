{
    "version": "https://jsonfeed.org/version/1",
    "title": "Faceless Blog • All posts by \"入门级\" tag",
    "description": "数据采集、逆向安全、网络杂谈",
    "home_page_url": "https://haysalan.github.io",
    "items": [
        {
            "id": "https://haysalan.github.io/posts/50605.html",
            "url": "https://haysalan.github.io/posts/50605.html",
            "title": "破解tap验证和绕过实名认证",
            "date_published": "2024-01-03T10:13:01.000Z",
            "content_html": "<h2 id=\"案例目标\"><a class=\"markdownIt-Anchor\" href=\"#案例目标\">#</a> 案例目标</h2>\n<ul>\n<li>去除账号验证</li>\n<li>去除实名认证</li>\n</ul>\n<h2 id=\"环境准备\"><a class=\"markdownIt-Anchor\" href=\"#环境准备\">#</a> 环境准备</h2>\n<ul>\n<li>MT 管理器 / NP 管理器</li>\n<li>JEB/jadx（非必须）</li>\n<li>模拟器 / 安卓手机</li>\n<li>root （否）</li>\n<li>目标 APP</li>\n</ul>\n<h2 id=\"破解步骤\"><a class=\"markdownIt-Anchor\" href=\"#破解步骤\">#</a> 破解步骤</h2>\n<h3 id=\"绕过账号验证\"><a class=\"markdownIt-Anchor\" href=\"#绕过账号验证\">#</a> 绕过账号验证</h3>\n<p>开启 MT 管理器的 Activity 记录功能<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671602359155-c9ae5dc8-85b5-4231-94fb-a928eebcc0c3.png#averageHue=%23cac9c9&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=ucdad7e8c&amp;originHeight=1206&amp;originWidth=668&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=101736&amp;status=done&amp;style=none&amp;taskId=u51237a12-77fe-4d3d-965c-d5df7542f11&amp;title=\" alt=\"微信截图_20221221135907.png\"><br>\n 启动成功后打开我们需要破解的 APP，他会启动游戏平台验证账号，我们回到游戏就会看到下面的页面。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671602498061-e1426d46-45a5-4fac-8ebb-49e5ec366acb.png#averageHue=%23444444&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=u3e40e4a9&amp;originHeight=739&amp;originWidth=1356&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=67608&amp;status=done&amp;style=none&amp;taskId=u99f86d7f-d114-47aa-930c-33fcc39d0c5&amp;title=\" alt=\"微信截图_20221221140124.png\"><br>\n 进入 MT 管理器查看记录，最后的一个活动是 com.txxxxx.pay.sdk.library.TxxAlertDialog$1，那我们从它开始入手。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671602303415-c37264f8-df26-4454-8352-0e8e41a313b3.png#averageHue=%23c3c2c1&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=udfc026cc&amp;originHeight=1298&amp;originWidth=694&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=254366&amp;status=done&amp;style=none&amp;taskId=udeaa1633-8f16-4d99-b3e5-929efbf8e92&amp;title=\" alt=\"微信截图_20221221135806.png\"><br>\n 找到这个类 com.txxxxx.pay.sdk.library.TxxAlertDialog<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671602871407-6ceb3b75-f65e-4c41-a429-95200bfad7db.png#averageHue=%23e7e3d7&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=u889397ae&amp;originHeight=933&amp;originWidth=1552&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=217684&amp;status=done&amp;style=none&amp;taskId=u45e25c5f-8765-4e4b-b9ff-fb14a6c7468&amp;title=\" alt=\"微信截图_20221221140729.png\"><br>\n 我们得到 new 它的地方。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671604604483-60b1bd9d-b7cc-4af6-bf09-65691a2f9037.png#averageHue=%23eae1d5&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=u8c895e75&amp;originHeight=1079&amp;originWidth=1567&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=211722&amp;status=done&amp;style=none&amp;taskId=ub2a5a9fd-f775-4796-add0-aad888f41b9&amp;title=\" alt=\"微信截图_20221221143612.png\"></p>\n<p>进入并分析一下。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671604759903-d6ad0476-9c68-4d05-8aac-7d5923ba3f27.png#averageHue=%23f3ebe3&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=u090dbc25&amp;originHeight=1087&amp;originWidth=1452&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=164088&amp;status=done&amp;style=none&amp;taskId=u121839ec-ce4b-4c71-99a3-a029bfa5e81&amp;title=\" alt=\"微信截图_20221221143852.png\"><br>\n 搜索一下哪里调用了销毁弹窗，验证通过必定需要销毁，找起来更快。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671604904388-35ec8f2a-0648-4fd1-89b0-2c81b69bf9bf.png#averageHue=%23f4f0ee&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=ueca1eb4e&amp;originHeight=693&amp;originWidth=1496&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=62436&amp;status=done&amp;style=none&amp;taskId=u9a91e773-032a-466e-962d-90dcc2a5958&amp;title=\" alt=\"微信截图_20221221144127.png\"><br>\n 进入分析一下。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671605052168-84dd2bde-fb9f-473e-b107-f74923303f3e.png#averageHue=%23f8f2f1&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=u72643f64&amp;originHeight=366&amp;originWidth=1450&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=56786&amp;status=done&amp;style=none&amp;taskId=u6055ff4c-1c26-4b48-b25b-074bf528857&amp;title=\" alt=\"微信截图_20221221144342.png\"><br>\n 看看哪里还个调用了<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671605447575-ce5982d8-35b3-43ef-9d78-260b576d4406.png#averageHue=%23f3f0ea&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=u2d5ce57b&amp;originHeight=916&amp;originWidth=1535&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=107223&amp;status=done&amp;style=none&amp;taskId=u40fd5ad3-e7ba-48b1-abcd-d2f0a1bed06&amp;title=\" alt=\"微信截图_20221221145005.png\"><br>\n 这里我验证过了，修改它们即可去除验证。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671605720530-3d2f6cd3-821d-4a38-9577-472b65688caa.png#averageHue=%23faf5f4&amp;clientId=u3218cd6c-2e71-4&amp;from=ui&amp;id=u7e1cfcac&amp;originHeight=1141&amp;originWidth=1406&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=122503&amp;status=done&amp;style=none&amp;taskId=u859a70bf-d132-46f9-bf73-82676b18f83&amp;title=\" alt=\"微信截图_20221221145500.png\"></p>\n<p>快速定位关键字 <code>checkLicense = licensed</code>  (不出意外只有一个结果)<br>\n 然后搜索定位函数 checkLicense<br>\n 在 smali 代码中修改对应的值就能去除验证了。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671532241058-89eb95d0-d5a6-4f7d-81c1-cdbc7457985b.png#averageHue=%23fdfaf9&amp;clientId=u5760c920-5b5f-4&amp;from=drop&amp;id=FZP8r&amp;originHeight=1176&amp;originWidth=1672&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=170926&amp;status=done&amp;style=none&amp;taskId=ue6c970bb-1886-4050-b0ae-6bbb13fcdac&amp;title=\" alt=\"微信截图_20221220183011.png\"><br>\n 重新签名安装后启动看看效果吧。</p>\n<h3 id=\"绕过实名认证\"><a class=\"markdownIt-Anchor\" href=\"#绕过实名认证\">#</a> 绕过实名认证</h3>\n<p>开启 MT 管理器的 Activity 记录功能，然后启动 APP 弹出实名弹窗之后回到 MT 管理器，可以看到只有一个 Activity -&gt;  <code>com.lixxthgame.abi.UnityPlayerActivity</code> <br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671588848878-0441652c-c8a9-49fa-b4b6-b8e7486d6fed.png#averageHue=%238b8a8a&amp;clientId=u2e0d459e-147d-4&amp;from=ui&amp;id=ua42b506b&amp;originHeight=1121&amp;originWidth=678&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=166629&amp;status=done&amp;style=none&amp;taskId=u8cdbd2c8-dbd3-4305-96f6-d6b64c57410&amp;title=\" alt=\"Snipaste_2022-12-21_10-11-13.png\"><br>\n 在 UnityPlayerActivity 中并没发现什么可疑的地方，那就得找新的办法了。<br>\n我们来试试新的关键字 “identify”，需要实名认证，估计会使用这个单词。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671593032964-ab95b599-8b44-4474-a4fb-6bfb0b60ecca.png#averageHue=%23ebe8e5&amp;clientId=u2e0d459e-147d-4&amp;from=ui&amp;id=u058e6d36&amp;originHeight=1153&amp;originWidth=1581&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=231954&amp;status=done&amp;style=none&amp;taskId=ue65d47f3-f7d1-40f0-95f9-8c11014a99e&amp;title=\" alt=\"微信截图_20221221112340.png\"><br>\n 看看这个 IdentifyHelp 类是干什么用的。</p>\n<p>IdentifyHelp 中有个方法 CompareTimeUp18 翻译过来就是 对比年龄到 18（估计是用出生日期和当前时间对比）<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671593371902-50de2adf-4bde-4121-8ec3-741a4df678aa.png#averageHue=%23fbf7f6&amp;clientId=u2e0d459e-147d-4&amp;from=ui&amp;id=u537bd713&amp;originHeight=346&amp;originWidth=1456&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=40390&amp;status=done&amp;style=none&amp;taskId=uec1358ce-5d27-46fa-a000-cc3c94241fe&amp;title=\" alt=\"微信截图_20221221112821.png\"><br>\n 看看那些地方调用了 CompareTimeUp18<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671593917788-ab9501b3-bda6-4746-aabf-699cbb8c4681.png#averageHue=%23f1eeeb&amp;clientId=u2e0d459e-147d-4&amp;from=ui&amp;id=u4a635499&amp;originHeight=1148&amp;originWidth=1582&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=133303&amp;status=done&amp;style=none&amp;taskId=u9aa9b69b-708f-401f-899d-6116db127f1&amp;title=\" alt=\"微信截图_20221221113824.png\"><br>\n 选择第一个，进入到方法 antiAddication，分析一下。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671595264762-5395591c-b7fa-42f5-b365-4d8dc36208e1.png#averageHue=%23f7f1ef&amp;clientId=u2e0d459e-147d-4&amp;from=ui&amp;id=u8027d24a&amp;originHeight=959&amp;originWidth=1449&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=164814&amp;status=done&amp;style=none&amp;taskId=ub95c164f-e498-45d0-b5e7-2c8198e9239&amp;title=\" alt=\"微信截图_20221221120045.png\"><br>\n 进入 setBigMan 或 setIdenfity 中<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671594735893-520b3df9-6c33-41b1-8eba-59e9feab47ba.png#averageHue=%23fcf8f7&amp;clientId=u2e0d459e-147d-4&amp;from=ui&amp;id=u483aba0b&amp;originHeight=1064&amp;originWidth=995&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=83011&amp;status=done&amp;style=none&amp;taskId=uccd0dc22-b3dc-44bb-b67e-ae4e734b216&amp;title=\" alt=\"微信截图_20221221115204.png\"><br>\n 将 isBigMan 和 isIdenfity 的初始值置为 true 即可去实名认证了。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671591338615-f3e424d9-7255-40c5-b067-160fd53e9272.png#averageHue=%23fbf9f9&amp;clientId=u2e0d459e-147d-4&amp;from=ui&amp;id=D2g7d&amp;originHeight=1087&amp;originWidth=979&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=101242&amp;status=done&amp;style=none&amp;taskId=u48e415f1-34d6-4730-a542-f28400787b2&amp;title=\" alt=\"微信截图_20221221105523.png\"></p>\n<p>在 smali 代码中修改对应的值就能去除验证了。<br>\n快速定位关键字  <code>LoaclUser&#123;name=</code>  (不出意外只有一个结果)<br>\n 搜索定位 isIdenfity<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2022/png/26634545/1671591845525-464035cb-38f4-480d-8e91-8375683bb4a5.png#averageHue=%23fdf3f1&amp;clientId=u2e0d459e-147d-4&amp;from=ui&amp;id=UGMOJ&amp;originHeight=511&amp;originWidth=1513&amp;originalType=binary%E2%88%B6=1&amp;rotation=0&amp;showTitle=false&amp;size=71430&amp;status=done&amp;style=none&amp;taskId=ua65fb48e-9e12-4d70-85f9-5dd795a4a49&amp;title=\" alt=\"微信截图_20221221110343.png\"></p>\n",
            "tags": [
                "入门级"
            ]
        },
        {
            "id": "https://haysalan.github.io/posts/26899.html",
            "url": "https://haysalan.github.io/posts/26899.html",
            "title": "小破站老版本（入门级）SO层Native方法分析",
            "date_published": "2023-12-09T01:25:03.000Z",
            "content_html": "<h1 id=\"准备工作\"><a class=\"markdownIt-Anchor\" href=\"#准备工作\">#</a> 准备工作</h1>\n<p>APK：哔哩哔哩 6.13.0<br>\n 首先通过 charles 抓包（<a href=\"/2023/12/14/yuque/charles%E7%A7%BB%E5%8A%A8&amp;PC%E6%8A%93%E5%8C%85%E9%85%8D%E7%BD%AE/\">charles 抓包配置</a>）发现加密参数是 sign（32 位）。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2023/png/26634545/1702545110875-4f85f617-f9b8-41f3-a026-5225f1ecb6fa.png#averageHue=%23efebe7&amp;clientId=u38bf89dd-3cf3-4&amp;from=paste&amp;height=182&amp;id=ud746971e&amp;originHeight=273&amp;originWidth=699&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=27817&amp;status=done&amp;style=none&amp;taskId=u0382f2ee-b150-43bf-8767-3f42b87f7c9&amp;title=&amp;width=466\" alt=\"image.png\"></p>\n<p>使用 ajdx 打开 apk 后搜索 &quot;sign&quot; 并没有想要的数据，接着试着搜索 &quot;sign=&quot; 经过分析发现是 <code>com.bilibili.nativelibrary.LibBili.s</code>  生成。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/26634545/1702546159027-aa401add-1412-4a36-85ec-25f0ed79ab6b.png#averageHue=%23fdf8f6&amp;clientId=u38bf89dd-3cf3-4&amp;from=paste&amp;height=341&amp;id=ubff81967&amp;originHeight=512&amp;originWidth=873&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=36640&amp;status=done&amp;style=none&amp;taskId=ua7d5337b-80c2-4ec6-9747-241d38418ae&amp;title=&amp;width=582\" alt=\"image.png\"></p>\n<h1 id=\"验证加密\"><a class=\"markdownIt-Anchor\" href=\"#验证加密\">#</a> 验证加密</h1>\n<p>使用 frida 来 hook 验证以下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">hookSign</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Java</span>.<span class=\"title function_\">perform</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"title class_\">LibBili</span> = <span class=\"title class_\">Java</span>.<span class=\"title function_\">use</span>(<span class=\"string\">&quot;com.bilibili.nativelibrary.LibBili&quot;</span>);</span><br><span class=\"line\">    <span class=\"title class_\">LibBili</span>[<span class=\"string\">&quot;s&quot;</span>].<span class=\"property\">implementation</span> = <span class=\"keyword\">function</span> (<span class=\"params\">sortedMap</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(</span><br><span class=\"line\">        <span class=\"string\">`LibBili.s is called: sortedMap=<span class=\"subst\">$&#123;sortedMap.entrySet().toArray()&#125;</span>`</span></span><br><span class=\"line\">      );</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result = <span class=\"variable language_\">this</span>[<span class=\"string\">&quot;s&quot;</span>](sortedMap);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`LibBili.s result=<span class=\"subst\">$&#123;result&#125;</span>`</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">setImmediate</span>(hookSign);</span><br></pre></td></tr></table></figure>\n<p>frida hook 日志，很明显 sign 就是在这里面生成的。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[MI 8 Pro::tv.danmaku.bili ]-&gt; LibBili.s is called: sortedMap=access_key=null,appkey=1d8b6e7d45233436,build=6130400,c_locale=zh-Hans_CN,channel=xxl_wyyd_001,mVersion=71,mallVersion=6130400,mobi_app=android,platform=android,s_locale=zh-Hans_CN,statistics=&#123;&quot;appId&quot;:1,&quot;platform&quot;:3,&quot;version&quot;:&quot;6.13.0&quot;,&quot;abtest&quot;:&quot;&quot;&#125;</span><br><span class=\"line\">LibBili.s result=access_key=&amp;appkey=1d8b6e7d45233436&amp;build=6130400&amp;c_locale=zh-Hans_CN&amp;channel=xxl_wyyd_001&amp;mVersion=71&amp;mallVersion=6130400&amp;mobi_app=android&amp;platform=android&amp;s_locale=zh-Hans_CN&amp;statistics=%7B%22appId%22%3A1%2C%22platform%22%3A3%2C%22version%22%3A%226.13.0%22%2C%22abtest%22%3A%22%22%7D&amp;ts=1702547190&amp;sign=83c0620895711a111a4fc8f046b76d9d</span><br></pre></td></tr></table></figure>\n<h1 id=\"定位-so\"><a class=\"markdownIt-Anchor\" href=\"#定位-so\">#</a> 定位 SO</h1>\n<p>使用大佬的<a href=\"https://github.com/lasting-yang/frida_hook_libart/blob/master/hook_RegisterNatives.js\"> hook 脚本</a>并作了点修改</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">hook_RegisterNatives</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> symbols = <span class=\"title class_\">Module</span>.<span class=\"title function_\">enumerateSymbolsSync</span>(<span class=\"string\">&quot;libart.so&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> addrRegisterNatives = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; symbols.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> symbol = symbols[i];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//_ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (</span><br><span class=\"line\">      symbol.<span class=\"property\">name</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;art&quot;</span>) &gt;= <span class=\"number\">0</span> &amp;&amp;</span><br><span class=\"line\">      symbol.<span class=\"property\">name</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;JNI&quot;</span>) &gt;= <span class=\"number\">0</span> &amp;&amp;</span><br><span class=\"line\">      symbol.<span class=\"property\">name</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;RegisterNatives&quot;</span>) &gt;= <span class=\"number\">0</span> &amp;&amp;</span><br><span class=\"line\">      symbol.<span class=\"property\">name</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;CheckJNI&quot;</span>) &lt; <span class=\"number\">0</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      addrRegisterNatives = symbol.<span class=\"property\">address</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;RegisterNatives is at &quot;</span>, symbol.<span class=\"property\">address</span>, symbol.<span class=\"property\">name</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (addrRegisterNatives != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Interceptor</span>.<span class=\"title function_\">attach</span>(addrRegisterNatives, &#123;</span><br><span class=\"line\">          <span class=\"attr\">onEnter</span>: <span class=\"keyword\">function</span> (<span class=\"params\">args</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> env = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">var</span> java_class = args[<span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">var</span> class_name = <span class=\"title class_\">Java</span>.<span class=\"property\">vm</span>.<span class=\"title function_\">tryGetEnv</span>().<span class=\"title function_\">getClassName</span>(java_class);</span><br><span class=\"line\">            <span class=\"comment\">// console.log(class_name);</span></span><br><span class=\"line\">            <span class=\"comment\">// 筛选类</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> taget_class = <span class=\"string\">&quot;com.bilibili.nativelibrary.LibBili&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (class_name === taget_class) &#123;</span><br><span class=\"line\">              <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;\\n[RegisterNatives] method_count:&quot;</span>, args[<span class=\"number\">3</span>]);</span><br><span class=\"line\">              <span class=\"keyword\">var</span> methods_ptr = <span class=\"title function_\">ptr</span>(args[<span class=\"number\">2</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">var</span> method_count = <span class=\"built_in\">parseInt</span>(args[<span class=\"number\">3</span>]);</span><br><span class=\"line\">              <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; method_count; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> name_ptr = <span class=\"title class_\">Memory</span>.<span class=\"title function_\">readPointer</span>(</span><br><span class=\"line\">                  methods_ptr.<span class=\"title function_\">add</span>(i * <span class=\"title class_\">Process</span>.<span class=\"property\">pointerSize</span> * <span class=\"number\">3</span>)</span><br><span class=\"line\">                );</span><br><span class=\"line\">                <span class=\"keyword\">var</span> sig_ptr = <span class=\"title class_\">Memory</span>.<span class=\"title function_\">readPointer</span>(</span><br><span class=\"line\">                  methods_ptr.<span class=\"title function_\">add</span>(</span><br><span class=\"line\">                    i * <span class=\"title class_\">Process</span>.<span class=\"property\">pointerSize</span> * <span class=\"number\">3</span> + <span class=\"title class_\">Process</span>.<span class=\"property\">pointerSize</span></span><br><span class=\"line\">                  )</span><br><span class=\"line\">                );</span><br><span class=\"line\">                <span class=\"keyword\">var</span> fnPtr_ptr = <span class=\"title class_\">Memory</span>.<span class=\"title function_\">readPointer</span>(</span><br><span class=\"line\">                  methods_ptr.<span class=\"title function_\">add</span>(</span><br><span class=\"line\">                    i * <span class=\"title class_\">Process</span>.<span class=\"property\">pointerSize</span> * <span class=\"number\">3</span> + <span class=\"title class_\">Process</span>.<span class=\"property\">pointerSize</span> * <span class=\"number\">2</span></span><br><span class=\"line\">                  )</span><br><span class=\"line\">                );</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> name = <span class=\"title class_\">Memory</span>.<span class=\"title function_\">readCString</span>(name_ptr);</span><br><span class=\"line\">                <span class=\"keyword\">var</span> sig = <span class=\"title class_\">Memory</span>.<span class=\"title function_\">readCString</span>(sig_ptr);</span><br><span class=\"line\">                <span class=\"keyword\">var</span> find_module = <span class=\"title class_\">Process</span>.<span class=\"title function_\">findModuleByAddress</span>(fnPtr_ptr);</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(</span><br><span class=\"line\">                  <span class=\"string\">&quot;[RegisterNatives] java_class:&quot;</span>,</span><br><span class=\"line\">                  class_name,</span><br><span class=\"line\">                  <span class=\"string\">&quot;name:&quot;</span>,</span><br><span class=\"line\">                  name,</span><br><span class=\"line\">                  <span class=\"string\">&quot;sig:&quot;</span>,</span><br><span class=\"line\">                  sig,</span><br><span class=\"line\">                  <span class=\"string\">&quot;fnPtr:&quot;</span>,</span><br><span class=\"line\">                  fnPtr_ptr,</span><br><span class=\"line\">                  <span class=\"string\">&quot;module_name:&quot;</span>,</span><br><span class=\"line\">                  find_module.<span class=\"property\">name</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;module_base:&quot;</span>,</span><br><span class=\"line\">                  find_module.<span class=\"property\">base</span>,</span><br><span class=\"line\">                  <span class=\"string\">&quot;offset:&quot;</span>,</span><br><span class=\"line\">                  <span class=\"title function_\">ptr</span>(fnPtr_ptr).<span class=\"title function_\">sub</span>(find_module.<span class=\"property\">base</span>)</span><br><span class=\"line\">                );</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">setImmediate</span>(hook_RegisterNatives);</span><br></pre></td></tr></table></figure>\n<p>添加筛选条件后输出的结果不多</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Spawning `tv.danmaku.bili`...</span><br><span class=\"line\">RegisterNatives is at  0xf0b3cbd9 _ZN3art3JNIILb0EE15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br><span class=\"line\">RegisterNatives is at  0xf0b910d5 _ZN3art3JNIILb1EE15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi</span><br><span class=\"line\">Spawned `tv.danmaku.bili`. Resuming main thread!</span><br><span class=\"line\">[MI 8 Pro::tv.danmaku.bili ]-&gt;</span><br><span class=\"line\">[RegisterNatives] method_count: 0x7</span><br><span class=\"line\">[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: a sig: (Ljava/lang/String;)Ljava/lang/String; fnPtr: 0xb8369c35 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c35</span><br><span class=\"line\">[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: ao sig: (Ljava/lang/String;II)Ljava/lang/String; fnPtr: 0xb8369c3b module_name: libbili.so module_base: 0xb8368000 offset: 0x1c3b</span><br><span class=\"line\">[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: b sig: (Ljava/lang/String;)Ljavax/crypto/spec/IvParameterSpec; fnPtr: 0xb8369c49 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c49</span><br><span class=\"line\">[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: s sig: (Ljava/util/SortedMap;)Lcom/bilibili/nativelibrary/SignedQuery; fnPtr: 0xb8369c4f module_name: libbili.so module_base: 0xb8368000 offset: 0x1c4f</span><br><span class=\"line\">[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: so sig: (Ljava/util/SortedMap;II)Lcom/bilibili/nativelibrary/SignedQuery; fnPtr: 0xb8369c55 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c55</span><br><span class=\"line\">[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: getCpuCount sig: ()I fnPtr: 0xb8369c63 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c63</span><br><span class=\"line\">[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: getCpuId sig: ()I fnPtr: 0xb8369c67 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c67</span><br></pre></td></tr></table></figure>\n<p>这就是我们需要的结果，module_name: <a href=\"http://libbili.so\">libbili.so</a> 表示 s 函数在 <strong><a href=\"http://libbili.so\">libbili.so</a></strong> 中。<br>\noffset: 0x1c4f 偏移量为 0x1c4f 可以理解为函数起始地址。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: s sig: (Ljava/util/SortedMap;)Lcom/bilibili/nativelibrary/SignedQuery; fnPtr: 0xb8369c4f module_name: libbili.so module_base: 0xb8368000 offset: 0x1c4f</span><br></pre></td></tr></table></figure>\n<h1 id=\"分析-so\"><a class=\"markdownIt-Anchor\" href=\"#分析-so\">#</a> 分析 SO</h1>\n<p>使用<strong> file</strong> 命令查看 so 的位数是多少位，可以看到是 32 位的，那么使用 32 位的 ida 打开。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/26634545/1702545860250-d8c98fed-5255-4a16-947a-c16016a59d92.png#averageHue=%232e3039&amp;clientId=u38bf89dd-3cf3-4&amp;from=paste&amp;height=72&amp;id=u4365b7e2&amp;originHeight=108&amp;originWidth=1195&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=31218&amp;status=done&amp;style=none&amp;taskId=uae38cbac-a117-4898-9e10-2e4569eeff4&amp;title=&amp;width=796.6666666666666\" alt=\"image.png\"></p>\n<h2 id=\"偏移量地址定位函数\"><a class=\"markdownIt-Anchor\" href=\"#偏移量地址定位函数\">#</a> 偏移量地址定位函数</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702550208616-9e78b5a6-c72b-4f48-bd9f-75b6684b755b.gif#averageHue=%23f7f7f6&amp;clientId=u26f63c50-11da-4&amp;from=drop&amp;id=u1e1c6921&amp;originHeight=1328&amp;originWidth=2053&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=454668&amp;status=done&amp;style=none&amp;taskId=ua43a4d49-06e5-478f-ac28-235419421ac&amp;title=\" alt=\"PixPin_2023-12-14_18-36-22.gif\"></p>\n<h2 id=\"jni_onload-定位-s-函数\"><a class=\"markdownIt-Anchor\" href=\"#jni_onload-定位-s-函数\">#</a> JNI_OnLoad 定位 s 函数</h2>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702550232510-9c4a4843-75f5-4fce-a183-770783c0dddb.gif#averageHue=%23f6f6f5&amp;clientId=u26f63c50-11da-4&amp;from=drop&amp;id=u5aefa470&amp;originHeight=1328&amp;originWidth=2053&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=792808&amp;status=done&amp;style=none&amp;taskId=u3e2d9528-de56-415e-9185-2b963fb96eb&amp;title=\" alt=\"PixPin_2023-12-14_18-32-47.gif\"></p>\n",
            "tags": [
                "frida",
                "SO",
                "Native",
                "入门级"
            ]
        }
    ]
}