{
    "version": "https://jsonfeed.org/version/1",
    "title": "Faceless Blog • All posts by \"ja3\" tag",
    "description": "数据采集、逆向安全、网络杂谈",
    "home_page_url": "https://haysalan.github.io",
    "items": [
        {
            "id": "https://haysalan.github.io/posts/1792.html",
            "url": "https://haysalan.github.io/posts/1792.html",
            "title": "TLS指纹-JA3",
            "date_published": "2023-10-21T00:38:54.000Z",
            "content_html": "<h2 id=\"官方解释\"><a class=\"markdownIt-Anchor\" href=\"#官方解释\">#</a> 官方解释</h2>\n<p>TLS 及其前身 SSL 用于为常见应用程序和恶意软件加密通信，以确保数据安全，因此可以隐藏在噪音中。要启动 TLS 会话，客户端将在 TCP 3 次握手之后发送 TLS 客户端 Hello 数据包。此数据包及其生成方式取决于构建客户端应用程序时使用的包和方法。服务器如果接受 TLS 连接，将使用基于服务器端库和配置以及 Client Hello 中的详细信息制定的 TLS Server Hello 数据包进行响应。由于 TLS 协商以明文形式传输，因此可以使用 TLS Client Hello 数据包中的详细信息来指纹和识别客户端应用程序。<br>\n<a href=\"https://engineering.salesforce.com/open-sourcing-ja3-92c9e53c3c41/\">官方介绍</a> | <a href=\"https://github.com/FoxIO-LLC/ja3\">JA3 指纹</a></p>\n<h2 id=\"ja3-原理\"><a class=\"markdownIt-Anchor\" href=\"#ja3-原理\">#</a> JA3 原理</h2>\n<p>JA3 收集以下字段的字节的十进制值；SSL 版本、接受的密码、扩展列表、椭圆曲线和椭圆曲线格式。然后，它按顺序将这些值连接在一起，使用 “，” 分隔每个字段，使用 “-” 分隔每个字段中的每个值。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2023/webp/26634545/1697851217544-efd479ce-e2f9-4582-8895-e2efe95fe3f5.webp#averageHue=%23f0efee&amp;clientId=u9d6790ac-ed8c-4&amp;from=paste&amp;height=837&amp;id=u1dbfb620&amp;originHeight=1256&amp;originWidth=1354&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=594364&amp;status=done&amp;style=none&amp;taskId=u22261562-ea35-4516-8852-7a2c8ad84f0&amp;title=&amp;width=902.6666666666666\" alt=\"0_QZ7tsC7MAET5lbLP.webp\"><br>\n 字段顺序如下：<br>\nSSLVersion，密码，扩展，椭圆曲线，椭圆曲线点格式<br>\n例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">769,47–53–5–10–49161–49162–49171–49172–50–56–19–4,0–10–11,23–24–25,0</span><br></pre></td></tr></table></figure>\n<p>如果客户端 Hello 中没有 SSL 扩展，则字段留空。<br>\n例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">769,4–5–10–9–100–98–3–6–19–18–99,,,</span><br></pre></td></tr></table></figure>\n<p>然后对这些字符串进行 MD5 哈希处理，以生成易于使用和共享的 32 个字符的指纹。这是 JA3 SSL 客户端指纹。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">769,47–53–5–10–49161–49162–49171–49172–50–56–19–4,0–10–11,23–24–25,0 → ada70206e40642a3e4461f35503241d5769,4–5–10–9–100–98–3–6–19–18–99,,,</span><br><span class=\"line\">→ de350869b8c85de67a350c8d186f11e6</span><br></pre></td></tr></table></figure>\n<p>我们还需要引入一些代码来解释 Google 的 GREASE（生成随机扩展和维持可扩展性），<a href=\"https://tools.ietf.org/html/draft-davidben-tls-grease-01\">如此处</a>所述。Google 将此用作防止 TLS 生态系统中扩展性失败的机制。JA3 完全忽略这些值，以确保使用 GREASE 的程序仍可以使用单个 JA3 哈希进行标识。</p>\n<h2 id=\"tls-检测判断\"><a class=\"markdownIt-Anchor\" href=\"#tls-检测判断\">#</a> TLS 检测判断</h2>\n<h3 id=\"tls-检测原理\"><a class=\"markdownIt-Anchor\" href=\"#tls-检测原理\">#</a> TLS 检测原理</h3>\n<blockquote>\n<p>抓包工具 wireshark、charles 只能查看 TLS 指纹，不能以此判断服务器检测了 TLS。</p>\n</blockquote>\n<p>在 HTTPS 协议中，TLS 协议是用来在客户端和服务器之间建立安全连接的，这个连接过程中就会生成 TLS 指纹。只要是 HTTPS 协议，必定会生成 TLS 指纹。<br>\n检测 TLS 是在服务端进行的，<strong>唯一</strong>判断是否检测 TLS 的手段就是<strong>测试</strong>和<strong>猜测</strong>。</p>\n<h3 id=\"未检测-tls\"><a class=\"markdownIt-Anchor\" href=\"#未检测-tls\">#</a> 未检测 TLS</h3>\n<ul>\n<li>验证请求头顺序</li>\n<li>检测 HTTP2.0</li>\n<li>curl 生成 code 可直接访问</li>\n<li>…</li>\n</ul>\n<h3 id=\"检测了-tls\"><a class=\"markdownIt-Anchor\" href=\"#检测了-tls\">#</a> 检测了 TLS</h3>\n<ul>\n<li>curl、api 调试工具、js 有可响应的就 python 不行。</li>\n<li>curl、js 都不行就浏览器可以。</li>\n<li>…</li>\n</ul>\n<h2 id=\"过校验示例\"><a class=\"markdownIt-Anchor\" href=\"#过校验示例\">#</a> 过校验示例</h2>\n<p>python 的 aiohttp | requests | httpx | scrapy 和 golang 相关的 ja3 指纹修改案例。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2023/png/26634545/1697867423544-d0cb481b-b803-4d8f-bc21-fec7ac4f18fd.png#averageHue=%23f4f2ef&amp;clientId=u44708746-5fd9-4&amp;from=paste&amp;height=101&amp;id=uc8e0d242&amp;originHeight=152&amp;originWidth=270&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=6334&amp;status=done&amp;style=none&amp;taskId=u48dd73f9-af7e-439c-8eae-ced91e6bee8&amp;title=&amp;width=180\" alt=\"image.png\"><br>\n 笔者整理的一些案例：<br>\n<a href=\"https://pan.baidu.com/s/1MEMMZTNg-6qmPrzprHVSVQ?pwd=k999\">JA3 指纹（go/python）点击下载</a></p>\n",
            "tags": [
                "TLS/SSL",
                "JA3"
            ]
        }
    ]
}