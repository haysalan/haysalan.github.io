{
    "version": "https://jsonfeed.org/version/1",
    "title": "Faceless Blog • All posts by \"actions\" tag",
    "description": "数据采集、逆向安全、网络杂谈",
    "home_page_url": "https://haysalan.github.io",
    "items": [
        {
            "id": "https://haysalan.github.io/posts/57474.html",
            "url": "https://haysalan.github.io/posts/57474.html",
            "title": "基于Hexo框架语雀文章博客模板",
            "date_published": "2024-02-15T12:28:23.000Z",
            "content_html": "<blockquote>\n<p>跳转仓库:<a href=\"https://github.com/haysalan/hexo-yuque-template\">haysalan/hexo-yuque-template</a></p>\n</blockquote>\n<h2 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\">#</a> 特点</h2>\n<ul>\n<li>支持在线一键部署或更新博客</li>\n<li>支持拉取语雀文章自动更新博客内容</li>\n<li>支持自定义 github actons 或 gitee 工作流</li>\n<li>高度可配置，支持自定义部署脚本</li>\n</ul>\n<h2 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h2>\n<h3 id=\"第一步-新建仓库\"><a class=\"markdownIt-Anchor\" href=\"#第一步-新建仓库\">#</a> 第一步 新建仓库</h3>\n<blockquote>\n<p>新建两个仓库</p>\n</blockquote>\n<p>一个私有仓库（名称随意）用于存放 hexo 博客配置等文件<br>\n一个开源仓库 <a href=\"http://yourname.github.io\">yourname.github.io</a> （替换成你的用户名）</p>\n<h3 id=\"第二步-配置私有仓库环境变量\"><a class=\"markdownIt-Anchor\" href=\"#第二步-配置私有仓库环境变量\">#</a> 第二步 配置私有仓库环境变量</h3>\n<p>1.github 个人设置创建 token 给与 workflow 权限以及无时间期限。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2024/png/26634545/1708004138179-a9745680-2e72-416d-bba9-00913ab4e7cb.png#averageHue=%23fefcf8&amp;clientId=u19099788-83ff-4&amp;from=paste&amp;height=740&amp;id=u89e4af88&amp;originHeight=1110&amp;originWidth=1894&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=171807&amp;status=done&amp;style=none&amp;taskId=u6f965fa4-65e1-44a8-aaeb-17b680d0756&amp;title=&amp;width=1262.6666666666667\" alt=\"image.png\"></p>\n<p>2. 将 github token 配置到你的私有仓库中。<strong>名称需一致</strong>。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2024/png/26634545/1708000324358-713596cf-6b43-47b7-8e7e-7d80a21466d2.png#averageHue=%23fefefe&amp;clientId=u22a9482c-048f-4&amp;from=paste&amp;height=806&amp;id=u4587f0a2&amp;originHeight=1209&amp;originWidth=1920&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=130041&amp;status=done&amp;style=none&amp;taskId=u8942af84-1ea7-4e08-8012-9876e0fe226&amp;title=&amp;width=1280\" alt=\"image.png\"></p>\n<p>3. 进入语雀网页版个人设置，获取语雀 token（现在需要超级会员才能创建，有之前创建的好的可直接使用）<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2024/png/26634545/1708001750001-786dbfbf-4cc0-4ad0-b912-1f5d800cbb4b.png#averageHue=%239d9d9d&amp;clientId=u22a9482c-048f-4&amp;from=paste&amp;height=705&amp;id=u633a491f&amp;originHeight=1058&amp;originWidth=1974&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=98460&amp;status=done&amp;style=none&amp;taskId=u24c28be8-539c-4b05-9d12-27a8d1a0f0b&amp;title=&amp;width=1316\" alt=\"image.png\"></p>\n<p>4. 将语雀 token 配置到私有仓库中 <strong>名称需一致</strong>。<br>\n<img src=\"https://cdn.nlark.com/yuque/0/2024/png/26634545/1708000395322-ba9dfab1-e87f-445d-aaa5-b774e992de19.png#averageHue=%23fefdfd&amp;clientId=u22a9482c-048f-4&amp;from=paste&amp;height=769&amp;id=ue5213370&amp;originHeight=1153&amp;originWidth=1858&amp;originalType=binary%E2%88%B6=1.5&amp;rotation=0&amp;showTitle=false&amp;size=180849&amp;status=done&amp;style=none&amp;taskId=u4bbdad0e-6a5b-4488-a562-01a206bcbf9&amp;title=&amp;width=1238.6666666666667\" alt=\"image.png\"></p>\n<h3 id=\"第三步-修改-actions\"><a class=\"markdownIt-Anchor\" href=\"#第三步-修改-actions\">#</a> 第三步 修改 actions</h3>\n<p>目录  <code>.github/workflows/blog-update.yml</code> <br>\n 将其中的 PUBLISH_REPOSITORY 修改为你的开源仓库路径。<br>\n目录： <code>actions/gitee-sync.yml</code> <br>\n <code>actions</code>  目录下存放开源仓库的工作流，用于在开源仓库触发执行。 <code>gitee-sync.yml </code> 基于 <a href=\"https://github.com/yanglbme/gitee-pages-action\">yanglbme /gitee-pages-action</a> 根据注释就行配置即可。<br>\n <code>gitee-sync.yml</code>  用于同步 <code>github pages</code>  同步到 <code>gitee pages</code>  可自动更新 <code>gitee pages</code>  无需  <code>gitee pages pro</code> 。</p>\n<h3 id=\"第四步-自定义部署\"><a class=\"markdownIt-Anchor\" href=\"#第四步-自定义部署\">#</a> 第四步 自定义部署</h3>\n<p>默认使用 anzhiyu 主题，可自行更换。<br>\n安装 hexo 主题或依赖请修改  <code>blog-update.yml</code> 。<br>\n构建博客静态文件前后指令添加请修改 <code>script/generate.sh</code> 。</p>\n<h2 id=\"预览\"><a class=\"markdownIt-Anchor\" href=\"#预览\">#</a> 预览</h2>\n<p>博客预览： <a href=\"https://haysalan.github.io/\">https://haysalan.github.io/</a><br>\n 博客模板：<a href=\"https://github.com/haysalan/hexo-yuque-template\">https://github.com/haysalan/hexo-yuque-template</a><br>\ngithub：<a href=\"https://github.com/Alanhays\">https://github.com/Alanhays</a></p>\n",
            "tags": [
                "GitHub",
                "Actions"
            ]
        },
        {
            "id": "https://haysalan.github.io/posts/60496.html",
            "url": "https://haysalan.github.io/posts/60496.html",
            "title": "GitHub Actions 的使用",
            "date_published": "2023-10-11T01:23:47.000Z",
            "content_html": "<h2 id=\"基本概念\"><a class=\"markdownIt-Anchor\" href=\"#基本概念\">#</a> 基本概念</h2>\n<ol>\n<li>workflow （工作流程）：持续集成一次运行的过程，就是一个 workflow。</li>\n<li>job （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。</li>\n<li>step（步骤）：每个 job 由多个 step 构成，一步步完成。</li>\n<li>action （动作）：每个 step 可以依次执行一个或多个命令（action）。</li>\n</ol>\n<h2 id=\"workflow-文件\"><a class=\"markdownIt-Anchor\" href=\"#workflow-文件\">#</a> workflow 文件</h2>\n<p>GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的.github/workflows 目录。<br>\nworkflow 文件采用 YAML 格式，文件名可以任意取，但是后缀名统一为.yml，比如 foo.yml。<br>\n一个库可以有多个 workflow 文件。<br>\nGitHub 只要发现.github/workflows 目录里面有.yml 文件，就会自动运行该文件。<br>\nworkflow 文件的配置字段非常多，详见<a href=\"https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions\">官方文档</a>。下面是一些基本字段。</p>\n<h3 id=\"name\"><a class=\"markdownIt-Anchor\" href=\"#name\">#</a> name</h3>\n<p>工作流的名称。GitHub 在存储库的 “Actions” 显示工作流的名称。如果省略 ，GitHub 将显示相对于存储库根目录的工作流文件路径。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: GitHub Actions Demo</span><br></pre></td></tr></table></figure>\n<h3 id=\"on\"><a class=\"markdownIt-Anchor\" href=\"#on\">#</a> on</h3>\n<p>定义运行工作流时的触发事件</p>\n<h4 id=\"使用单个事件\"><a class=\"markdownIt-Anchor\" href=\"#使用单个事件\">#</a> 使用单个事件</h4>\n<p>例如，具有以下值的工作流将在推送到工作流存储库中的任何分支时运行：on</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">on:</span> <span class=\"string\">push</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用多个事件\"><a class=\"markdownIt-Anchor\" href=\"#使用多个事件\">#</a> 使用多个事件</h4>\n<p>您可以指定单个事件或多个事件。例如，当推送到存储库中的任何分支或有人分叉存储库时，将运行具有以下值的工作流：on</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">on:</span> [<span class=\"string\">push</span>, <span class=\"string\">fork</span>]</span><br></pre></td></tr></table></figure>\n<p>如果指定多个事件，则只需发生其中一个事件即可触发工作流。如果同时发生工作流的多个触发事件，则将触发多个工作流运行。</p>\n<h3 id=\"jobsjob_idname\"><a class=\"markdownIt-Anchor\" href=\"#jobsjob_idname\">#</a> jobs.&lt;job_id&gt;.name</h3>\n<p>工作流运行中要执行的一项或多项任务</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">task1:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">The</span> <span class=\"string\">first</span> <span class=\"string\">task</span> <span class=\"string\">to</span> <span class=\"string\">be</span> <span class=\"string\">executed</span></span><br><span class=\"line\">  <span class=\"attr\">task2:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">The</span> <span class=\"string\">second</span> <span class=\"string\">task</span> <span class=\"string\">to</span> <span class=\"string\">execute</span></span><br></pre></td></tr></table></figure>\n<p>上面代码的 jobs 字段包含 task1、task2 任务，task1 (job_id) 里面的 name 字段是任务的说明。</p>\n<h3 id=\"jobsjob_idneeds\"><a class=\"markdownIt-Anchor\" href=\"#jobsjob_idneeds\">#</a> jobs.&lt;job_id&gt;.needs</h3>\n<p>用于标识在运行当前任务之前<strong>必须成功完成</strong>的一项或多项作业</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">job1:</span></span><br><span class=\"line\">  <span class=\"attr\">job2:</span></span><br><span class=\"line\">    <span class=\"attr\">needs:</span> <span class=\"string\">job1</span></span><br><span class=\"line\">  <span class=\"attr\">job3:</span></span><br><span class=\"line\">    <span class=\"attr\">needs:</span> [<span class=\"string\">job1</span>, <span class=\"string\">job2</span>]</span><br></pre></td></tr></table></figure>\n<p>job1 无需等待直接执行、job2 需要等待 job1 执行完成、job3 需要等待 job1、job2 都执行完成。</p>\n<blockquote>\n<p>示例执行流程 | job1 -&gt; job2 -&gt; job3</p>\n</blockquote>\n<h3 id=\"jobsjob_idruns-on\"><a class=\"markdownIt-Anchor\" href=\"#jobsjob_idruns-on\">#</a> jobs.&lt;job_id&gt;.runs-on</h3>\n<p>runs-on 字段指定运行所需要的虚拟机环境。可用虚拟机如下（示例）</p>\n<table>\n<thead>\n<tr>\n<th>ubuntu</th>\n<th>windows</th>\n<th>macos</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ubuntu-latest</td>\n<td>windows-latest</td>\n<td>macos-latest</td>\n</tr>\n<tr>\n<td>ubuntu-18.04</td>\n<td>windows-2019</td>\n<td>macos-10.14</td>\n</tr>\n<tr>\n<td>ubuntu-22.04</td>\n<td>windows-2022</td>\n<td>macos-12</td>\n</tr>\n</tbody>\n</table>\n<p>指定虚拟机为 ubuntu-22.04 （必填）</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-22.04</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"jobsjob_idsteps\"><a class=\"markdownIt-Anchor\" href=\"#jobsjob_idsteps\">#</a> jobs.&lt;job_id&gt;.steps</h3>\n<p>steps 字段指定每个 Job 的运行步骤，可以包含一个或多个步骤。<br>\n每个步骤都可以指定以下三个字段。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">jobs.&lt;job_id&gt;.steps.name：名称</span></span><br><span class=\"line\"><span class=\"string\">jobs.&lt;job_id&gt;.steps.run：运行的命令或者</span> <span class=\"string\">action</span></span><br><span class=\"line\"><span class=\"string\">jobs.&lt;job_id&gt;.steps.env：所需的环境变量</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "GitHub",
                "Actions"
            ]
        }
    ]
}