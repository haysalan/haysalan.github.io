<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://haysalan.github.io</id>
    <title>Faceless Blog • Posts by &#34;经验教程&#34; category</title>
    <link href="https://haysalan.github.io" />
    <updated>2024-01-03T07:34:02.000Z</updated>
    <category term="AST" />
    <category term="解混淆" />
    <category term="nodejs" />
    <category term="build" />
    <category term="frida" />
    <category term="jnitrace" />
    <category term="objection" />
    <category term="GitHub" />
    <category term="Actions" />
    <category term="TLS/SSL" />
    <category term="JA3" />
    <category term="JA4" />
    <category term="证书" />
    <category term="magisk" />
    <category term="andorid" />
    <category term="fastboot" />
    <category term="root" />
    <category term="charles" />
    <category term="抓包" />
    <category term="加速乐" />
    <category term="思路" />
    <category term="SO" />
    <category term="Native" />
    <category term="入门级" />
    <category term="windows" />
    <category term="资源" />
    <category term="疑难杂症" />
    <category term="hexo" />
    <entry>
        <id>https://haysalan.github.io/posts/38694.html</id>
        <title>Build Nodejs 环境配置</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/38694.html"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;对于 js 补浏览器环境时遇到一些 js 无法实现的环境，那么就需要修改 node 源码来实现，本文简单复述一下 Build Node 所需要的环境及配置，推荐直接看&lt;a href=&#34;https://github.com/nodejs/node/blob/HEAD/BUILDING.md&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&#34;windows-1011&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#windows-1011&#34;&gt;#&lt;/a&gt; windows 10/11&lt;/h1&gt;
&lt;h2 id=&#34;环境准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境准备&#34;&gt;#&lt;/a&gt; 环境准备&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/nodejs/node/blob/main/BUILDING.md#windows&#34;&gt;windows 部分官方教程（推荐）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;一-python-环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-python-环境&#34;&gt;#&lt;/a&gt; 一、Python 环境&lt;/h3&gt;
&lt;p&gt;安装好 python 并且配置环境变量，官网下载（&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;点击下载&lt;/a&gt;）我使用的版本是 3.8.0，低版本不知道是否可用，如果第一次安装 Python 建议安装 3.8.0 及以上。&lt;br&gt;
如果下载速度慢，可点击&lt;a href=&#34;https://surans.lanzouw.com/b00y05wvi&#34;&gt;链接（密码：h85c）&lt;/a&gt;下载我拷贝到蓝奏云文件。&lt;/p&gt;
&lt;h3 id=&#34;二-visual-studio-installer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-visual-studio-installer&#34;&gt;#&lt;/a&gt; &lt;strong&gt;二、Visual Studio Installer&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;安装 C++/.NET 环境有两个可选方案&lt;/strong&gt; 1. 安装&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt; Visual Studio 2022&lt;/a&gt; 并且勾选 “使用 C++ 进行桌面开发” 和 “.NET 桌面生成工具” 进行环境安装。(推荐)&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704271697464-b1f8bde9-2952-4f6c-91a2-87734409773a.png#averageHue=%23f6f6f6&amp;amp;clientId=u118ac858-2e95-4&amp;amp;from=paste&amp;amp;height=226&amp;amp;id=ua286dd38&amp;amp;originHeight=339&amp;amp;originWidth=623&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=30683&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u7d40a80e-757a-42f1-b4c2-e59071004fb&amp;amp;title=&amp;amp;width=415.3333333333333&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 安装&lt;a href=&#34;https://aka.ms/vs/17/release/vs_buildtools.exe&#34;&gt;构建工具&lt;/a&gt;打开后自动安装 “C++ 构建工具” 环境等待安装完成后打开 &lt;strong&gt;Visual Studio Installer&lt;/strong&gt; 勾选 “.NET 桌面生成工具” 进行环境安装。&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704270358817-7e442e02-b5b5-4901-82d1-525aa2c60c9c.png#averageHue=%23f4f4f4&amp;amp;clientId=ud662e875-ea93-4&amp;amp;from=paste&amp;amp;height=282&amp;amp;id=u6feb1e41&amp;amp;originHeight=423&amp;amp;originWidth=720&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=17211&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u6d5b157d-079c-40a7-815a-a6b0a00aacb&amp;amp;title=&amp;amp;width=480&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;三-netwide-汇编程序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-netwide-汇编程序&#34;&gt;#&lt;/a&gt; 三、NetWide 汇编程序&lt;/h3&gt;
&lt;p&gt;点击&lt;a href=&#34;https://www.nasm.us/pub/nasm/releasebuilds/2.16.02rc6/win64/&#34;&gt;这里&lt;/a&gt;下载后安装即可，安装是一直点 next 即可。&lt;br&gt;
我安装的版本是&lt;a href=&#34;https://www.nasm.us/pub/nasm/releasebuilds/2.16.02rc6/win64/nasm-2.16.02rc6-installer-x64.exe&#34;&gt; nasm-2.16.02rc6&lt;/a&gt;，其他版本选择点击&lt;a href=&#34;https://www.nasm.us/pub/nasm/releasebuilds&#34;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704272184220-9e9a3c78-f713-4c5e-ac47-d953d32b9b6c.png#averageHue=%23f8f0ef&amp;amp;clientId=u5ba02b39-7ceb-4&amp;amp;from=paste&amp;amp;height=98&amp;amp;id=u873f167a&amp;amp;originHeight=147&amp;amp;originWidth=1018&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=35233&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uf20b23dd-d83a-4aad-8df8-6167647b80a&amp;amp;title=&amp;amp;width=678.6666666666666&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;下载-node-源码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载-node-源码&#34;&gt;#&lt;/a&gt; 下载 Node 源码&lt;/h2&gt;
&lt;p&gt;官方教程使用 Git Bash 来进行下载，&lt;a href=&#34;https://git-scm.com/download/win&#34;&gt; Git for Windows&lt;/a&gt; 下载安装。记得配置环境变量。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone https://github.com/nodejs/node.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd node&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于 node 源码 400m 比较大，我选择进入&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt; Nodejs 官网&lt;/a&gt;进行源码下载，当然使用你喜欢的方式即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704273537999-f71a2be0-54f9-463b-aa21-aa82b1e13aaf.png#averageHue=%23faf9f9&amp;amp;clientId=u5ba02b39-7ceb-4&amp;amp;from=paste&amp;amp;height=705&amp;amp;id=u94fc557b&amp;amp;originHeight=1057&amp;amp;originWidth=1791&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=149833&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u7d9819c3-fefa-4269-bb68-5450930f849&amp;amp;title=&amp;amp;width=1194&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;build-node&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#build-node&#34;&gt;#&lt;/a&gt; Build Node&lt;/h2&gt;
&lt;p&gt;进入到 node 源码根目录，例如我这里需要进入到 &lt;code&gt;nodes/node-v20.10.0&lt;/code&gt; &lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704272480903-a4072940-1d9a-4ae7-a0da-3b8b34a56cfc.png#averageHue=%232a2c2f&amp;amp;clientId=u5ba02b39-7ceb-4&amp;amp;from=paste&amp;amp;height=564&amp;amp;id=ue8b55729&amp;amp;originHeight=846&amp;amp;originWidth=847&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=73957&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u6a26f812-9cf3-4eac-88af-a8bd2d93d79&amp;amp;title=&amp;amp;width=564.6666666666666&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开始构建&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;构建后会在&lt;strong&gt; Release&lt;/strong&gt; 文件夹下生成构建好的&lt;strong&gt; node.exe&lt;/strong&gt; 文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.\vcbuild&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;进行测试&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.\vcbuild test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;测试 Node.js 是否正确构建&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Release\node -e &amp;quot;console.log(&amp;#x27;Hello from Node.js&amp;#x27;, process.version)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="nodejs" />
        <category term="build" />
        <updated>2024-01-03T07:34:02.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/60184.html</id>
        <title>学习逆向过程中的一些问题与其解决办法</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/60184.html"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;学习逆向过程中的一些问题与其解决办法，当然还有大佬们文章内提到的，整理出来方便翻阅，持续更新。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% tip key %&amp;#125;当然大家有什么问题也可在下方评论，如有解决本文问题的方法还请不吝赐教，在此感谢鞠躬！&amp;#123;% endtip %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考资料&#34;&gt;#&lt;/a&gt; 参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_38851536/category_11102404.html?spm=1001.2014.3001.5482&#34;&gt;白龙 - SO 逆向实战十三篇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;资源工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#资源工具&#34;&gt;#&lt;/a&gt; 资源工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef&#34;&gt;CyberChef - 用于加密，编码，压缩和数据分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://armconverter.com/&#34;&gt;armconverter - ARM-HEX 转换器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/r0ysue/r0capture&#34;&gt;r0capture - 安卓应用层抓包通杀脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/maiyao1988/ExAndroidNativeEmu&#34;&gt;ExAndroidNativeEmu - Python 工具 Unidbg 青春版功能有限&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Pr0214/findhash&#34;&gt;findhash - IDA 脚本 可以检测出哈希算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sml2h3/ddddocr&#34;&gt;ddddocr - Python 库 通用验证码识别库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ida&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ida&#34;&gt;#&lt;/a&gt; IDA&lt;/h1&gt;
&lt;h2 id=&#34;通过-jni_onload-定位-native-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过-jni_onload-定位-native-函数&#34;&gt;#&lt;/a&gt; 通过 JNI_OnLoad 定位 Native 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% tip info %&amp;#125;仅限没有经过混淆或加密处理的样本&amp;#123;% endtip %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702550232510-9c4a4843-75f5-4fce-a183-770783c0dddb.gif#averageHue=%23f6f6f5&amp;amp;clientId=u26f63c50-11da-4&amp;amp;from=drop&amp;amp;id=u5aefa470&amp;amp;originHeight=1328&amp;amp;originWidth=2053&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=792808&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u3e2d9528-de56-415e-9185-2b963fb96eb&amp;amp;title=&#34; alt=&#34;PixPin_2023-12-14_18-32-47.gif&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;python&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python&#34;&gt;#&lt;/a&gt; Python&lt;/h1&gt;
&lt;h2 id=&#34;python-能不能调用-so-文件的-native-方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python-能不能调用-so-文件的-native-方法&#34;&gt;#&lt;/a&gt; Python 能不能调用 so 文件的 Native 方法？&lt;/h2&gt;
&lt;p&gt;Python 也有类似 Unidbg 的工具&lt;a href=&#34;https://github.com/maiyao1988/ExAndroidNativeEmu&#34;&gt; ExAndroidNativeEmu - Python 工具 Unidbg 青春版功能有限&lt;/a&gt;，但是仅限于对&lt;strong&gt; JAVA 层的交互极少&lt;/strong&gt;，一旦涉及到 JNI 交互，则需要果断选择 Unidbg，在 Python 中补 JAVA 的逻辑，简直不是人该受的委屈。&lt;/p&gt;
&lt;h1 id=&#34;密码学&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密码学&#34;&gt;#&lt;/a&gt; 密码学&lt;/h1&gt;
&lt;h2 id=&#34;加密算法大概率是开源或者魔改算法有没有快速验证的方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#加密算法大概率是开源或者魔改算法有没有快速验证的方法&#34;&gt;#&lt;/a&gt; 加密算法大概率是开源或者魔改算法有没有快速验证的方法？&lt;/h2&gt;
&lt;p&gt;当在分析过程中有猜测或怀疑是某加密算法时可以使用类似&lt;a href=&#34;https://github.com/Pr0214/findhash&#34;&gt; findhash - IDA 脚本 可以检测出哈希算法&lt;/a&gt;的脚本，此脚本可检测无论是否魔改常数的 hash 算法 MD5，SHA1、SHA2。&lt;/p&gt;
&lt;h1 id=&#34;汇编指令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#汇编指令&#34;&gt;#&lt;/a&gt; 汇编指令&lt;/h1&gt;
&lt;h2 id=&#34;arm32-有-thumb-和-arm-两种指令模式如何确定&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#arm32-有-thumb-和-arm-两种指令模式如何确定&#34;&gt;#&lt;/a&gt; ARM32 有 Thumb 和 ARM 两种指令模式如何确定？&lt;/h2&gt;
&lt;p&gt;最粗暴的方式就是试错法 module.callFunction 时不加 1 会报错非法指令则表示是 Thumb 模式&lt;br&gt;
第二个办法是从知识角度出发，ARM 模式指令总是 4 字节长度，Thumb 指令长度多数为 2 字节，少部分指令是 4 字节。&lt;/p&gt;
&lt;h1 id=&#34;unidbg&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unidbg&#34;&gt;#&lt;/a&gt; Unidbg&lt;/h1&gt;
&lt;h2 id=&#34;unidbg-的-jnionload-加载出的类是乱码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unidbg-的-jnionload-加载出的类是乱码&#34;&gt;#&lt;/a&gt; Unidbg 的 Jnionload 加载出的类是乱码？&lt;/h2&gt;
&lt;p&gt;so 做了字符串的混淆或加密，以此来对抗分析人员，但字符串总是要解密的，不然怎么用呢？这个解密一般发生在 Init array 节或者 JNI OnLoad 中，又或者是该字符串使用前的任何一个时机&lt;/p&gt;
&lt;h2 id=&#34;对虚拟内存进行修改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对虚拟内存进行修改&#34;&gt;#&lt;/a&gt; 对虚拟内存进行修改&lt;/h2&gt;
&lt;p&gt;Unidbg 提供了两种方法打 Patch，简单的需求可以调用 Unicorn 对虚拟内存进行修改，如下&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public void patchVerify()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int patchCode = 0x4FF00100; //&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    emulator.getMemory().pointer(module.base + 0x1E86).setInt(0,patchCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% tip warning %&amp;#125;需要注意的是，这儿地址可别+1了，Thumb的+1只在运行和Hook时需要考虑，打Patch可别想。&amp;#123;% endtip %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;补环境怎么补补什么&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#补环境怎么补补什么&#34;&gt;#&lt;/a&gt; 补环境怎么补补什么？&lt;/h2&gt;
&lt;p&gt;我们既可以根据报错提示，在 AbstractJni 对应的函数体内，依葫芦画瓢，case &amp;quot;xxx“。&lt;br&gt;
也可以在我们的 zuiyou 类中补，因为 zuiyou 类继承了 AbstractJNI。&lt;br&gt;
关于补法，有两种实践方法都很有道理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全部在用户类中补，防止项目迁移或者 Unidbg 更新带来什么问题，这样做代码的移植性比较好。&lt;/li&gt;
&lt;li&gt;自定义 JAVA 方法在用户类中补，通用的方法在 AbstractJNI 中补，这样做的好处是，之后运行的项目如果调用通用方法，就不用做重复的修补工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;如何主动调用一个-native-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何主动调用一个-native-函数&#34;&gt;#&lt;/a&gt; 如何主动调用一个 Native 函数&lt;/h2&gt;
&lt;p&gt;在 Frida 中可以使用 NativeFunction API 主动调用&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function call_65540(base_addr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 函数在内存中的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var real_addr = base_addr.add(0x65541)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var md5_function = new NativeFunction(real_addr, &amp;quot;int&amp;quot;, [&amp;quot;pointer&amp;quot;, &amp;quot;int&amp;quot;, &amp;quot;pointer&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 参数1 明文字符串的指针&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var input = &amp;quot;r0ysue&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var arg1 = Memory.allocUtf8String(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 参数2 明文长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var arg2 = input.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 参数3，存放结果的buffer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var arg3 = Memory.alloc(16);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    md5_function(arg1, arg2, arg3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(hexdump(arg3,&amp;#123;length:0x10&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function callMd5()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 确定SO 的基地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var base_addr = Module.findBaseAddress(&amp;quot;libnet_crypto.so&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    call_65540(base_addr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// frida -UF -l path\hookright.js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 Unidbg 也是类似的，只不过换一下 API 罢了，让我们来看一下&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public void callMd5()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;Object&amp;gt; list = new ArrayList&amp;lt;&amp;gt;(10);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // arg1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String input = &amp;quot;r0ysue&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // malloc memory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MemoryBlock memoryBlock1 = emulator.getMemory().malloc(16, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // get memory pointer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    UnidbgPointer input_ptr=memoryBlock1.getPointer();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // write plainText on it&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    input_ptr.write(input.getBytes(StandardCharsets.UTF_8));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // arg2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int input_length = input.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // arg3 -- buffer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MemoryBlock memoryBlock2 = emulator.getMemory().malloc(16, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    UnidbgPointer output_buffer=memoryBlock2.getPointer();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 填入参入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list.add(input_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list.add(input_length);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list.add(output_buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    module.callFunction(emulator, 0x65540 + 1, list.toArray());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // print arg3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Inspector.inspect(output_buffer.getByteArray(0, 0x10), &amp;quot;output&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要注意，在 Unidbg 中，同样的功能有至少两种实现和写法 ——Unicorn 的原生方法以及 Unidbg 封装后的方法，在阅读别人代码时需要灵活变通。就好比 &lt;strong&gt;getR0long&lt;/strong&gt; 和&lt;strong&gt; emulator.getBackend ().reg_read (ArmConst.UC_ARM_REG_R0)&lt;/strong&gt;，它们都是获取寄存器 R0 的数值。&lt;/p&gt;
&lt;h2 id=&#34;jnitrace-trace-我们在参数还没完全转换完的情况下unidbg-就退出了&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jnitrace-trace-我们在参数还没完全转换完的情况下unidbg-就退出了&#34;&gt;#&lt;/a&gt; JNItrace trace 我们在参数还没完全转换完的情况下，Unidbg 就退出了&lt;/h2&gt;
&lt;p&gt;这种情况下，可能的原因有很多，但可能性较大的是两个&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上下文环境缺失&lt;/li&gt;
&lt;li&gt;样本使用某种手段检测或反制了 Unidbg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先看一下是否是上下文的问题，假设是上下文缺失，通俗的讲就是在 SO 加载后到我们的 main 函数调用前的这段时间里，样本需要调用一些函数对 SO 进行初始化，而我们没有注意也没做这个事，这导致了 Unidbg 无法顺利运行。&lt;/p&gt;
&lt;h1 id=&#34;抓包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#抓包&#34;&gt;#&lt;/a&gt; 抓包&lt;/h1&gt;
&lt;h2 id=&#34;对于服务器校验证书如何抓包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对于服务器校验证书如何抓包&#34;&gt;#&lt;/a&gt; 对于服务器校验证书如何抓包？&lt;/h2&gt;
&lt;p&gt;安卓可以使用&lt;a href=&#34;https://github.com/r0ysue/r0capture&#34;&gt; r0capture - 安卓应用层抓包通杀脚本&lt;/a&gt;进行抓包分析。&lt;/p&gt;
&lt;h1 id=&#34;验证码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#验证码&#34;&gt;#&lt;/a&gt; 验证码&lt;/h1&gt;
&lt;h2 id=&#34;遇到验证码验证怎么办&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#遇到验证码验证怎么办&#34;&gt;#&lt;/a&gt; 遇到验证码验证怎么办？&lt;/h2&gt;
&lt;p&gt;可以使用&lt;a href=&#34;https://github.com/sml2h3/ddddocr&#34;&gt; ddddocr - Python 库 通用验证码识别库&lt;/a&gt;进行识别，支持老版验证码，当前验证码支持部分滑块文字点选等。&lt;/p&gt;
</content>
        <category term="思路" />
        <updated>2023-12-25T08:59:43.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/42317.html</id>
        <title>android证书安装与校验相关解决办法</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/42317.html"/>
        <content type="html">&lt;h1 id=&#34;android-安装证书&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#android-安装证书&#34;&gt;#&lt;/a&gt; Android 安装证书&lt;/h1&gt;
&lt;h2 id=&#34;magisk-安装证书插件推荐&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#magisk-安装证书插件推荐&#34;&gt;#&lt;/a&gt; Magisk 安装证书插件（推荐）&lt;/h2&gt;
&lt;p&gt;Magisk 中安装插件并&lt;strong&gt;重启&lt;/strong&gt;，在手机&lt;strong&gt;设置&lt;/strong&gt;安全中&lt;strong&gt;正常手动安装&lt;/strong&gt;证书至&lt;strong&gt;用户证书&lt;/strong&gt;，接着&lt;strong&gt;重启&lt;/strong&gt;手机用户证书则会&lt;strong&gt;移动至系统&lt;/strong&gt;证书。&lt;br&gt;
&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2023/zip/26634545/1703485160886-247fbe50-2bba-4cc0-a497-de50d632fce2.zip?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2023%2Fzip%2F26634545%2F1703485160886-247fbe50-2bba-4cc0-a497-de50d632fce2.zip%22%2C%22name%22%3A%22Move_Certificates-v1.9.zip%22%2C%22size%22%3A6632%2C%22ext%22%3A%22zip%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u5964d71d-391f-441d-b906-9b9861b2cf1%22%2C%22taskType%22%3A%22transfer%22%2C%22type%22%3A%22application%2Fx-zip-compressed%22%2C%22mode%22%3A%22title%22%2C%22id%22%3A%22G2ubz%22%2C%22card%22%3A%22file%22%7D&#34;&gt;Move_Certificates-v1.9.zip&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;shell-命令安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shell-命令安装&#34;&gt;#&lt;/a&gt; Shell 命令安装&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;操作证书相关命令&lt;/strong&gt;（kali 自带 openssl）&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看crt\der格式证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -in FiddlerRoot.crt -inform DER -noout -text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看pem证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -in certificate.pem -inform pem -noout -text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;crt/der转pem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -in FiddlerRoot.crt -inform DER -out certificate.pem -outform PEM&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;pem转der/crt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -in certificate.pem -inform PEM -out FiddlerRoot.der -outform DER&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;计算pem证书&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -subject_hash_old -in Desktop.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;导入到系统前需要&lt;strong&gt;重命名&lt;/strong&gt;证书 &lt;strong&gt;hash 值.0 -&amp;gt; xxxx.0&lt;/strong&gt;。如果存在文件名&lt;strong&gt;冲突&lt;/strong&gt;，则可将 &lt;code&gt;.0&lt;/code&gt;  改为 &lt;code&gt;.1&lt;/code&gt;  或 &lt;code&gt;.2&lt;/code&gt;  等等。&lt;br&gt;
&lt;strong&gt;新开&lt;/strong&gt;一个 &lt;code&gt;cmd&lt;/code&gt;  执行以下命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;hash&lt;/strong&gt; 值通过&lt;strong&gt; pem&lt;/strong&gt; 证书计算得到（上面最后一条指令）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;adb root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb remount&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb push xxxxxxx.0 /system/etc/security/cacerts/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd /system/etc/security/cacerts/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 644 xxxxxxx.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reboot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="证书" />
        <category term="magisk" />
        <updated>2023-12-25T06:17:05.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/45467.html</id>
        <title>android逆向分析环境配置</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/45467.html"/>
        <content type="html">&lt;h1 id=&#34;资源文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#资源文件&#34;&gt;#&lt;/a&gt; 资源文件&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2023/zip/26634545/1703052470975-a479d323-df18-42ff-853f-276c2131959a.zip?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2023%2Fzip%2F26634545%2F1703052470975-a479d323-df18-42ff-853f-276c2131959a.zip%22%2C%22name%22%3A%22adb-fastboot.zip%22%2C%22size%22%3A3765786%2C%22ext%22%3A%22zip%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u7cda5742-2eb3-451d-b580-34c5f297476%22%2C%22taskType%22%3A%22upload%22%2C%22type%22%3A%22application%2Fx-zip-compressed%22%2C%22__spacing%22%3A%22both%22%2C%22mode%22%3A%22title%22%2C%22id%22%3A%22KebVn%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22file%22%7D&#34;&gt;adb-fastboot.zip&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;获取-root-权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取-root-权限&#34;&gt;#&lt;/a&gt; 获取 root 权限&lt;/h1&gt;
&lt;h2 id=&#34;magisk&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#magisk&#34;&gt;#&lt;/a&gt; Magisk&lt;/h2&gt;
&lt;p&gt;magisk 中文网：&lt;a href=&#34;https://magiskcn.com/&#34;&gt;https://magiskcn.com/&lt;/a&gt;&lt;br&gt;
magisk 官网：&lt;a href=&#34;https://magiskmanager.com/&#34;&gt;https://magiskmanager.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;解锁 Bootloader&lt;/li&gt;
&lt;li&gt;提取 boot.img (卡刷包中有)&lt;/li&gt;
&lt;li&gt;PC 端&lt;strong&gt; adb-fastboot&lt;/strong&gt; 环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修补 boot.img&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1703052109455-296af09d-fccf-4099-82e3-7dae58f608de.gif#averageHue=%23eeedee&amp;amp;clientId=ue2fcaaf7-e91c-4&amp;amp;from=drop&amp;amp;id=ude4dd989&amp;amp;originHeight=1228&amp;amp;originWidth=591&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=4240369&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u50b904ac-b0b4-4a7d-ad2f-b12e0d4fe07&amp;amp;title=&#34; alt=&#34;PixPin_2023-12-20_09-51-40.gif&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装证书&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装证书&#34;&gt;#&lt;/a&gt; 安装证书&lt;/h1&gt;
&lt;p&gt;安装证书详细步骤：&lt;a href=&#34;/posts/42317.html&#34;&gt;android 证书安装与校验相关解决办法&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;问题记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题记录&#34;&gt;#&lt;/a&gt; 问题记录&lt;/h1&gt;
&lt;h2 id=&#34;小米-8-写入-boot-报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小米-8-写入-boot-报错&#34;&gt;#&lt;/a&gt; 小米 8 写入 boot 报错&lt;/h2&gt;
&lt;h3 id=&#34;write-to-device-failed-invalid-argument&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#write-to-device-failed-invalid-argument&#34;&gt;#&lt;/a&gt; Write to device failed (Invalid argument)&lt;/h3&gt;
&lt;p&gt;报错详情 -&amp;gt;** **&lt;a href=&#34;https://blog.csdn.net/qq_39441603/article/details/124679556&#34;&gt; 原文地址&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;D:\user\Downloads\adb-fastboot&amp;gt;fastboot flash boot magisk_patched-26400_QSOWo.img&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Warning: skip copying boot image avb footer (boot partition size: 0, boot image size: 45851946).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Sending &amp;#x27;boot&amp;#x27; (44777 KB)                          FAILED (Write to device failed (Invalid argument))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fastboot: error: Command failed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新建文件 &lt;code&gt;txt&lt;/code&gt;  文件粘贴代码块内容，保存后修改后缀为 &lt;code&gt;bat&lt;/code&gt; ，以管理员方式运行。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@echo off&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\usbflags\18D1D00D0100&amp;quot; /v &amp;quot;osvc&amp;quot; /t REG_BINARY /d &amp;quot;0000&amp;quot; /f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\usbflags\18D1D00D0100&amp;quot; /v &amp;quot;SkipContainerIdQuery&amp;quot; /t REG_BINARY /d &amp;quot;01000000&amp;quot; /f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\usbflags\18D1D00D0100&amp;quot; /v &amp;quot;SkipBOSDescriptorQuery&amp;quot; /t REG_BINARY /d &amp;quot;01000000&amp;quot; /f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行完后，执行写入 boot 成功。&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1703040985764-924bd56a-4821-4b6f-afc5-67df9f4fe391.png#averageHue=%231d1d1d&amp;amp;clientId=ucd4155a3-2258-4&amp;amp;from=paste&amp;amp;height=82&amp;amp;id=u3ba72421&amp;amp;originHeight=123&amp;amp;originWidth=1140&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=19723&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uff1395f0-22ae-459a-967d-4eadd322f82&amp;amp;title=&amp;amp;width=760&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
</content>
        <category term="magisk" />
        <category term="andorid" />
        <category term="fastboot" />
        <category term="root" />
        <updated>2023-12-20T02:49:06.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/8117.html</id>
        <title>Frida三板斧的安装配置与基本使用</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/8117.html"/>
        <content type="html">&lt;h1 id=&#34;frida&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#frida&#34;&gt;#&lt;/a&gt; Frida&lt;/h1&gt;
&lt;p&gt;面向开发人员、逆向工程师和安全研究人员的动态检测工具包。&lt;br&gt;
frida 文档：&lt;a href=&#34;https://frida.re/docs/home/&#34;&gt;https://frida.re/docs/home/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;对应版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对应版本&#34;&gt;#&lt;/a&gt; 对应版本&lt;/h2&gt;
&lt;p&gt;frida&amp;amp;frida-tools 版本对应查看 ：&lt;a href=&#34;https://github.com/frida/frida/releases&#34;&gt;frida-releases&lt;/a&gt;&lt;br&gt;
 找到你使用 frida 的版本，查看其版本下&lt;strong&gt; frida-tools&lt;/strong&gt; 的版本，它们就是对应版本。（建议多准备几个 Python 与 firda 的版本，因为它并不稳定）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install frida==14.2.13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip install frida-tools==9.2.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702889862515-455c0fb7-9dc7-4854-a6d6-c94c36b24e9e.gif#averageHue=%23fcfbfb&amp;amp;clientId=ua9a61f28-e353-4&amp;amp;from=drop&amp;amp;id=u694dfb9e&amp;amp;originHeight=1363&amp;amp;originWidth=2038&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=5812512&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u5b43f4cc-ded4-442f-9e7d-b7f790a8823&amp;amp;title=&#34; alt=&#34;PixPin_2023-12-18_16-57-12.gif&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;frida-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#frida-server&#34;&gt;#&lt;/a&gt; frida-server&lt;/h2&gt;
&lt;p&gt;安卓手机需要安装 frida-server，版本与 frida&lt;strong&gt; 版本需一致&lt;/strong&gt;，根据&lt;strong&gt;设备架构&lt;/strong&gt;选择 x86 或 arm 等。&lt;br&gt;
&lt;strong&gt;解压文件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;7x x frida-server.xz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;启动 frida-server&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;adb root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb push frida-server /data/local/tmp/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb shell &amp;quot;chmod 755 /data/local/tmp/frida-server&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb shell &amp;quot;/data/local/tmp/frida-server&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;测试服务&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frida-ps -U  // 查看正在运行进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显示如下内容则表示服务启动，手机&lt;strong&gt;重启&lt;/strong&gt;后&lt;strong&gt;需&lt;/strong&gt;要&lt;strong&gt;再次&lt;/strong&gt;执行命令&lt;strong&gt;启动&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  PID NAME&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1590 com.xxx.xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13194 com.xxxx.xxxxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;…&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常用命令&#34;&gt;#&lt;/a&gt; 常用命令&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frida -FU packagename -l hookscript.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;jnitrace&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jnitrace&#34;&gt;#&lt;/a&gt; Jnitrace&lt;/h1&gt;
&lt;p&gt;JNItrace 是一个基于 Frida 框架的&lt;strong&gt; Hook jni&lt;/strong&gt; 方法的库。&lt;a href=&#34;https://github.com/chame1eon/jnitrace&#34;&gt;https://github.com/chame1eon/jnitrace&lt;/a&gt;&lt;br&gt;
Python &lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install jnitrace   &lt;span class=&#34;comment&#34;&gt;// 需要frida版本14以上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;依赖&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#依赖&#34;&gt;#&lt;/a&gt; 依赖：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;arm、arm64、x86 或 x64 Android 设备&lt;/li&gt;
&lt;li&gt;Frida 安装在 Android 设备上&lt;/li&gt;
&lt;li&gt;Frida 支持 &amp;gt; 14&lt;/li&gt;
&lt;li&gt;使用 Python 3 和 pip 的 Linux、Mac 或 Windows 主机&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;启动命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#启动命令&#34;&gt;#&lt;/a&gt; 启动命令：&lt;/h2&gt;
&lt;p&gt;两个参数分别为&lt;strong&gt;待分析的 SO&lt;/strong&gt; 与&lt;strong&gt; APP 包名&lt;/strong&gt;。-l 参数可以多次使用  &lt;code&gt;-l libname.so -l libname1.so ...&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;jnitrace -l libname.so packagename&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;默认使用  &lt;code&gt;spawn&lt;/code&gt;  启动，可以通过  &lt;code&gt;-m attach&lt;/code&gt;  设置通过  &lt;code&gt;attach&lt;/code&gt;  启。&lt;/p&gt;
&lt;figure class=&#34;highlight latex&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;jnitrace -m attach -l libname.so packagename&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;  导出 log 日志保存至文件，控制台将不输出 log。&lt;br&gt;
例： &lt;code&gt;jnitrace -l libname packagename &amp;gt;&amp;gt; jnitrace.txt&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;objection&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#objection&#34;&gt;#&lt;/a&gt; objection&lt;/h1&gt;
&lt;h1 id=&#34;安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h1&gt;
&lt;p&gt;官方安装教程：&lt;a href=&#34;https://github.com/sensepost/objection/wiki/Installation&#34;&gt;https://github.com/sensepost/objection/wiki/Installation&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip3 install -U objection&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在内存中所有已加载的类中搜索包含特定关键词的类&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android hooking search classes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hook java 方法&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android hooking watch class_method &amp;lt;methodName&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hook java 类&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android hooking watch class &amp;lt;classname&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;列出进程所有的 activity&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android hooking list activities&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="frida" />
        <category term="jnitrace" />
        <category term="objection" />
        <updated>2023-12-18T07:59:47.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/41869.html</id>
        <title>Frida相关API介绍</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/41869.html"/>
        <content type="html">&lt;h1 id=&#34;静态实例方法-hook&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#静态实例方法-hook&#34;&gt;#&lt;/a&gt; 静态 &amp;amp; 实例方法 Hook&lt;/h1&gt;
&lt;p&gt;静态和实例方法的 hook 代码一致。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; className = &lt;span class=&#34;string&#34;&gt;&amp;quot;com.xxxx.xx&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; funcName = &lt;span class=&#34;string&#34;&gt;&amp;quot;func&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; classObject = &lt;span class=&#34;title class_&#34;&gt;Java&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;use&lt;/span&gt;(className);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 静态和实例方法的hook代码一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;classObject[funcName].&lt;span class=&#34;property&#34;&gt;implementation&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;className&amp;#125;&lt;/span&gt; -&amp;gt; call &lt;span class=&#34;subst&#34;&gt;$&amp;#123;funcName&amp;#125;&lt;/span&gt; - param: `&lt;/span&gt;, x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x = &lt;span class=&#34;string&#34;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 修改参数 除基础类型外其他类型需要自行构造。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; result = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;[funcName](x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// result = &amp;quot;param&amp;quot;;  // 修改返回值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;构造方法的-hook-init&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#构造方法的-hook-init&#34;&gt;#&lt;/a&gt; 构造方法的 hook ($init)&lt;/h1&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; classObject = &lt;span class=&#34;title class_&#34;&gt;Java&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;use&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;com.xxx.xx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;classObject.&lt;span class=&#34;property&#34;&gt;$init&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;implementation&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;a, b&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;className&amp;#125;&lt;/span&gt; -&amp;gt; call $init - param: `&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.$init(a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="frida" />
        <updated>2023-12-18T02:41:22.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/43239.html</id>
        <title>charles移动&amp;PC抓包配置</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/43239.html"/>
        <content type="html">&lt;h1 id=&#34;安装-charles&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装-charles&#34;&gt;#&lt;/a&gt; 安装 charles&lt;/h1&gt;
&lt;p&gt;官网下载：&lt;a href=&#34;https://www.charlesproxy.com/download/&#34;&gt;https://www.charlesproxy.com/download/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;电脑抓包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#电脑抓包&#34;&gt;#&lt;/a&gt; 电脑抓包&lt;/h1&gt;
&lt;p&gt;安装好证书，打开 charles 这开启端口抓包，可设置 PC 系统代理来抓包数据，但通常不推荐这么做，推荐使用&lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/fdbloeknjpnloaggplaobopplkdhnikc&#34;&gt; Proxy SwitchyOmega&lt;/a&gt; （Edge 插件 | chrome 也有此插件）来进行浏览器抓包。&lt;/p&gt;
&lt;h2 id=&#34;代理设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代理设置&#34;&gt;#&lt;/a&gt; 代理设置&lt;/h2&gt;
&lt;p&gt;操作：Proxy -&amp;gt; Proxy Settings 1. 勾选 Enable tranaparent HTTP proxying 2. 勾选 Enable SOCKS proxy&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702542982696-ff3a7b7a-cb54-45f2-9240-15a56ef773de.png#averageHue=%23eeedec&amp;amp;clientId=u81dbcc76-2115-4&amp;amp;from=paste&amp;amp;height=466&amp;amp;id=u1a21edff&amp;amp;originHeight=699&amp;amp;originWidth=813&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=39284&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u10dc5636-6596-47fb-a940-a83a8f00c23&amp;amp;title=&amp;amp;width=542&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;抓取端口设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#抓取端口设置&#34;&gt;#&lt;/a&gt; 抓取端口设置&lt;/h2&gt;
&lt;p&gt;操作：Proxy -&amp;gt; &lt;a href=&#34;https://so.csdn.net/so/search?q=SSL&amp;amp;spm=1001.2101.3001.7020&#34;&gt;SSL&lt;/a&gt; Proxying Settings 1. 勾选 Enable SSL Proxying 2. 点击 Add，添加抓取端口&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702542919357-abd6010c-5334-4b49-9366-46eb366e5ad5.png#averageHue=%23ebeae9&amp;amp;clientId=u81dbcc76-2115-4&amp;amp;from=paste&amp;amp;height=438&amp;amp;id=u20559f8c&amp;amp;originHeight=657&amp;amp;originWidth=813&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=61836&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u63c04ad3-1aa3-44e5-a2e7-a9c0e2dda23&amp;amp;title=&amp;amp;width=542&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装证书&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装证书&#34;&gt;#&lt;/a&gt; 安装证书&lt;/h2&gt;
&lt;p&gt;操作：Help -&amp;gt; SSL Proxying -&amp;gt; Install Charles Root Certificate -&amp;gt; 安装证书 -&amp;gt; 本地计算机 -&amp;gt; 将所有的证书都放入下列存储 -&amp;gt; 点击浏览，选择” 受信任的根证书颁发机构” -&amp;gt; 完成&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702542740132-c2b41f8f-4bd4-4534-9f3a-7bd6e3e3d394.gif#averageHue=%23efefeb&amp;amp;clientId=u81dbcc76-2115-4&amp;amp;from=drop&amp;amp;id=ueca600f2&amp;amp;originHeight=1197&amp;amp;originWidth=1980&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=2581990&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u9846250a-e561-479a-bcd4-5d345d04fb2&amp;amp;title=&#34; alt=&#34;PixPin_2023-12-14_16-31-31.gif&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;移动抓包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#移动抓包&#34;&gt;#&lt;/a&gt; 移动抓包&lt;/h1&gt;
&lt;p&gt;手机和 PC 处于同一网络下，将 charles&lt;strong&gt; 证书&lt;/strong&gt;安装至&lt;strong&gt;系统&lt;/strong&gt;（安卓 7 以下不用），配置&lt;strong&gt; WiFi 代理&lt;/strong&gt;或者&lt;strong&gt; clash 代理转发&lt;/strong&gt;，如此即可在 PC 上抓到手机流量包了。&lt;/p&gt;
&lt;h2 id=&#34;安装证书-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装证书-2&#34;&gt;#&lt;/a&gt; 安装证书&lt;/h2&gt;
&lt;p&gt;准备安装 android 证书，按照下方步骤，显示图片弹窗后进行下一步。&lt;br&gt;
&lt;strong&gt;Help&lt;/strong&gt;-&amp;gt; &lt;strong&gt;SSL Proxying&lt;/strong&gt; -&amp;gt;&lt;strong&gt;Install Charles Root Certificate On a Mobile Device&lt;/strong&gt;。&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1703312970820-c7e0626a-d8c1-4be9-8f91-036c35357056.png#averageHue=%23e7e5e3&amp;amp;clientId=uef12f301-3e43-4&amp;amp;from=paste&amp;amp;height=170&amp;amp;id=u5cc1829c&amp;amp;originHeight=255&amp;amp;originWidth=814&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=26000&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ue3ce1d79-7a01-4302-af17-d1841650ceb&amp;amp;title=&amp;amp;width=542.6666666666666&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
 手机浏览器输入地址 &lt;a href=&#34;http://chls.pro/ssl&#34;&gt;http://chls.pro/ssl&lt;/a&gt; 下载 crt 证书&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702535270215-e71cd701-5988-4f3b-a89f-29b9bf53ed72.png#averageHue=%239a9ca4&amp;amp;clientId=ufc930610-f89c-4&amp;amp;from=paste&amp;amp;height=819&amp;amp;id=Mcxwp&amp;amp;originHeight=1228&amp;amp;originWidth=591&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=103675&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ubec0b902-275a-48bc-a551-3a86ba9f403&amp;amp;title=&amp;amp;width=394&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装证书详细步骤：&lt;a href=&#34;/2023/12/20/yuque/android%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E4%B8%8E%E6%A0%A1%E9%AA%8C%E7%9B%B8%E5%85%B3%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95&#34;&gt;android 证书安装与校验相关解决办法&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;手动设置代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手动设置代理&#34;&gt;#&lt;/a&gt; 手动设置代理&lt;/h2&gt;
&lt;p&gt;代理主机：&lt;strong&gt;PC&lt;/strong&gt; 的 IP 地址，我这里是&lt;strong&gt; WiFi&lt;/strong&gt; 所以是&lt;strong&gt; WLAN&lt;/strong&gt; 的&lt;strong&gt; IPv4&lt;/strong&gt; 地址。&lt;br&gt;
代理端口：&lt;strong&gt;charles -&amp;gt; Proxy -&amp;gt; ProxySettings -&amp;gt; Proxies&lt;/strong&gt; 页面中的 &lt;strong&gt;HTTP Proxy -&amp;gt; Port&lt;/strong&gt; ，&lt;strong&gt;默认&lt;/strong&gt;为&lt;strong&gt; 8888&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702535694493-ac598886-d284-4c1f-afe7-eb1f2442bc2f.png#averageHue=%23817e7d&amp;amp;clientId=ufc930610-f89c-4&amp;amp;from=paste&amp;amp;height=741&amp;amp;id=ue0569354&amp;amp;originHeight=1111&amp;amp;originWidth=1794&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=287946&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ue22ead4e-85ab-48ed-b5aa-d597a7d05af&amp;amp;title=&amp;amp;width=1196&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;clash-配置代理转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#clash-配置代理转发&#34;&gt;#&lt;/a&gt; clash 配置代理转发&lt;/h2&gt;
&lt;p&gt;打开 clash 依次点击 &lt;strong&gt;配置 -&amp;gt; 加号 -&amp;gt; 文件 -&amp;gt; 浏览文件 -&amp;gt; 配置文件&lt;/strong&gt;，选择 MT 管理器打开，将下面代码&lt;strong&gt;根据注释修改&lt;/strong&gt;后粘贴进去，保存好，启动服务即可。（下方有操作 gif）&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;mixed-port:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7890&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;allow-lan:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;mode:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;global&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;log-level:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;info&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;external-controller:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;:9090&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;proxies:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;proxy_http&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;type:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;http&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;server:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.199&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 代理主机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;port:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8888&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# http代理端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;udp:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;proxy_socks5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;type:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;socks5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;server:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.199&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 代理主机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;port:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8889&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# socks代理端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;udp:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;proxy-groups:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;rules:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置名称随意，启动后记得选择代理模式哦！&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702537855126-591ef863-1e1b-4d96-853a-69762b62290b.gif#averageHue=%23ecebec&amp;amp;clientId=ufc930610-f89c-4&amp;amp;from=drop&amp;amp;id=u5fc3d2e3&amp;amp;originHeight=1228&amp;amp;originWidth=591&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=3818248&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u4df31eeb-7401-42c3-95f4-02a5f80b311&amp;amp;title=&#34; alt=&#34;PixPin_2023-12-14_15-10-03.gif&#34;&gt;&lt;/p&gt;
</content>
        <category term="charles" />
        <category term="抓包" />
        <updated>2023-12-14T05:59:32.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/50497.html</id>
        <title>TLS指纹-JA4</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/50497.html"/>
        <content type="html">&lt;h2 id=&#34;官方解释&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#官方解释&#34;&gt;#&lt;/a&gt; 官方解释&lt;/h2&gt;
&lt;p&gt;JA4 + 是一套易于使用和共享的网络指纹识别方法。这些方法既是人类可读的，也是机器可读的，以促进更有效的威胁搜寻和分析。这些指纹的用例包括扫描威胁参与者、恶意软件检测、会话劫持预防、合规性自动化、位置跟踪、DDoS 检测、威胁参与者分组、反向外壳检测等等。&lt;br&gt;
JA4 系列 ：JA4/S/H/L/X/SSH，简称 JA4+&lt;br&gt;
&lt;a href=&#34;https://blog.foxio.io/ja4-network-fingerprinting-9376fe9ca637&#34;&gt; 官方介绍&lt;/a&gt; | &lt;a href=&#34;https://github.com/FoxIO-LLC/ja4&#34;&gt;JA4 指纹&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;初始指纹：&lt;br&gt;
JA4 — TLS 客户端 JA4S — TLS 服务器响应&lt;br&gt;
 JA4H — HTTP 客户端&lt;/p&gt;
&lt;p&gt;JA4L — 光距离 / 位置&lt;br&gt;
 JA4X — X509 TLS 证书&lt;br&gt;
 JA4SSH — SSH 流量&lt;br&gt;
更多指纹正在开发中，并将在发布时添加到 JA4+ 系列中。&lt;/p&gt;
&lt;p&gt;例子&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/webp/26634545/1697868649851-fc1d1b6c-4298-41cf-a8d5-28962645cc50.webp#averageHue=%23eaeaea&amp;amp;clientId=ucffaa756-14f5-4&amp;amp;from=ui&amp;amp;id=u5b1e2317&amp;amp;originHeight=496&amp;amp;originWidth=614&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=40140&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ubf96421a-4174-421d-b1c4-b2abffba38f&amp;amp;title=&#34; alt=&#34;1_ouP7r5IlQoTmameDpppq4g.webp&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h1&gt;
</content>
        <category term="TLS/SSL" />
        <category term="JA4" />
        <updated>2023-10-21T01:31:26.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/1792.html</id>
        <title>TLS指纹-JA3</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/1792.html"/>
        <content type="html">&lt;h2 id=&#34;官方解释&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#官方解释&#34;&gt;#&lt;/a&gt; 官方解释&lt;/h2&gt;
&lt;p&gt;TLS 及其前身 SSL 用于为常见应用程序和恶意软件加密通信，以确保数据安全，因此可以隐藏在噪音中。要启动 TLS 会话，客户端将在 TCP 3 次握手之后发送 TLS 客户端 Hello 数据包。此数据包及其生成方式取决于构建客户端应用程序时使用的包和方法。服务器如果接受 TLS 连接，将使用基于服务器端库和配置以及 Client Hello 中的详细信息制定的 TLS Server Hello 数据包进行响应。由于 TLS 协商以明文形式传输，因此可以使用 TLS Client Hello 数据包中的详细信息来指纹和识别客户端应用程序。&lt;br&gt;
&lt;a href=&#34;https://engineering.salesforce.com/open-sourcing-ja3-92c9e53c3c41/&#34;&gt;官方介绍&lt;/a&gt; | &lt;a href=&#34;https://github.com/FoxIO-LLC/ja3&#34;&gt;JA3 指纹&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ja3-原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ja3-原理&#34;&gt;#&lt;/a&gt; JA3 原理&lt;/h2&gt;
&lt;p&gt;JA3 收集以下字段的字节的十进制值；SSL 版本、接受的密码、扩展列表、椭圆曲线和椭圆曲线格式。然后，它按顺序将这些值连接在一起，使用 “，” 分隔每个字段，使用 “-” 分隔每个字段中的每个值。&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/webp/26634545/1697851217544-efd479ce-e2f9-4582-8895-e2efe95fe3f5.webp#averageHue=%23f0efee&amp;amp;clientId=u9d6790ac-ed8c-4&amp;amp;from=paste&amp;amp;height=837&amp;amp;id=u1dbfb620&amp;amp;originHeight=1256&amp;amp;originWidth=1354&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=594364&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u22261562-ea35-4516-8852-7a2c8ad84f0&amp;amp;title=&amp;amp;width=902.6666666666666&#34; alt=&#34;0_QZ7tsC7MAET5lbLP.webp&#34;&gt;&lt;br&gt;
 字段顺序如下：&lt;br&gt;
SSLVersion，密码，扩展，椭圆曲线，椭圆曲线点格式&lt;br&gt;
例：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;769,47–53–5–10–49161–49162–49171–49172–50–56–19–4,0–10–11,23–24–25,0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果客户端 Hello 中没有 SSL 扩展，则字段留空。&lt;br&gt;
例：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;769,4–5–10–9–100–98–3–6–19–18–99,,,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后对这些字符串进行 MD5 哈希处理，以生成易于使用和共享的 32 个字符的指纹。这是 JA3 SSL 客户端指纹。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;769,47–53–5–10–49161–49162–49171–49172–50–56–19–4,0–10–11,23–24–25,0 → ada70206e40642a3e4461f35503241d5769,4–5–10–9–100–98–3–6–19–18–99,,,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;→ de350869b8c85de67a350c8d186f11e6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们还需要引入一些代码来解释 Google 的 GREASE（生成随机扩展和维持可扩展性），&lt;a href=&#34;https://tools.ietf.org/html/draft-davidben-tls-grease-01&#34;&gt;如此处&lt;/a&gt;所述。Google 将此用作防止 TLS 生态系统中扩展性失败的机制。JA3 完全忽略这些值，以确保使用 GREASE 的程序仍可以使用单个 JA3 哈希进行标识。&lt;/p&gt;
&lt;h2 id=&#34;tls-检测判断&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tls-检测判断&#34;&gt;#&lt;/a&gt; TLS 检测判断&lt;/h2&gt;
&lt;h3 id=&#34;tls-检测原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tls-检测原理&#34;&gt;#&lt;/a&gt; TLS 检测原理&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;抓包工具 wireshark、charles 只能查看 TLS 指纹，不能以此判断服务器检测了 TLS。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 HTTPS 协议中，TLS 协议是用来在客户端和服务器之间建立安全连接的，这个连接过程中就会生成 TLS 指纹。只要是 HTTPS 协议，必定会生成 TLS 指纹。&lt;br&gt;
检测 TLS 是在服务端进行的，&lt;strong&gt;唯一&lt;/strong&gt;判断是否检测 TLS 的手段就是&lt;strong&gt;测试&lt;/strong&gt;和&lt;strong&gt;猜测&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;未检测-tls&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#未检测-tls&#34;&gt;#&lt;/a&gt; 未检测 TLS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;验证请求头顺序&lt;/li&gt;
&lt;li&gt;检测 HTTP2.0&lt;/li&gt;
&lt;li&gt;curl 生成 code 可直接访问&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;检测了-tls&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检测了-tls&#34;&gt;#&lt;/a&gt; 检测了 TLS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;curl、api 调试工具、js 有可响应的就 python 不行。&lt;/li&gt;
&lt;li&gt;curl、js 都不行就浏览器可以。&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;过校验示例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过校验示例&#34;&gt;#&lt;/a&gt; 过校验示例&lt;/h2&gt;
&lt;p&gt;python 的 aiohttp | requests | httpx | scrapy 和 golang 相关的 ja3 指纹修改案例。&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1697867423544-d0cb481b-b803-4d8f-bc21-fec7ac4f18fd.png#averageHue=%23f4f2ef&amp;amp;clientId=u44708746-5fd9-4&amp;amp;from=paste&amp;amp;height=101&amp;amp;id=uc8e0d242&amp;amp;originHeight=152&amp;amp;originWidth=270&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=6334&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u48dd73f9-af7e-439c-8eae-ced91e6bee8&amp;amp;title=&amp;amp;width=180&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
 笔者整理的一些案例：&lt;br&gt;
&lt;a href=&#34;https://pan.baidu.com/s/1MEMMZTNg-6qmPrzprHVSVQ?pwd=k999&#34;&gt;JA3 指纹（go/python）点击下载&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="TLS/SSL" />
        <category term="JA3" />
        <updated>2023-10-21T00:38:54.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/14781.html</id>
        <title>AST解混淆插件函数</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/14781.html"/>
        <content type="html">&lt;p&gt;&lt;strong&gt;存在复用性的插件与函数，不定期补充。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;字面量解混淆&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字面量解混淆&#34;&gt;#&lt;/a&gt; 字面量解混淆&lt;/h2&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; simplifyLiteral = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;NumericLiteral&lt;/span&gt;(&amp;#123; node &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&#34;regexp&#34;&gt;/^0[obx]/i&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;raw&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;//特征匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;StringLiteral&lt;/span&gt;(&amp;#123; node &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&#34;regexp&#34;&gt;/\\[ux]/gi&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;raw&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;规范块语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#规范块语句&#34;&gt;#&lt;/a&gt; 规范块语句&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i) &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;; j++) &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(j);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (i &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) i++, &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; set = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; element &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; set) &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; char &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; str) &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(char);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//-----------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(j);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (i &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  i++, &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; set = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; element &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; set) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; char &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; str) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(char);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;插件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BlockSyntax&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;ForStatement|WhileStatement|ForInStatement|ForOfStatement&amp;quot;&lt;/span&gt;(&amp;#123; node &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isBlockStatement&lt;/span&gt;(node.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      node.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt; = types.&lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;([node.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;IfStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; nodes = [&lt;span class=&#34;string&#34;&gt;&amp;quot;consequent&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;alternate&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; nodes.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _path = path.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(nodes[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (_path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt; &amp;amp;&amp;amp; !_path.&lt;span class=&#34;title function_&#34;&gt;isBlockStatement&lt;/span&gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        _path.&lt;span class=&#34;title function_&#34;&gt;replaceInline&lt;/span&gt;(types.&lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;([_path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="AST" />
        <category term="解混淆" />
        <updated>2023-10-08T07:46:52.000Z</updated>
    </entry>
    <entry>
        <id>https://haysalan.github.io/posts/35002.html</id>
        <title>AST解混淆常用API介绍</title>
        <link rel="alternate" href="https://haysalan.github.io/posts/35002.html"/>
        <content type="html">&lt;p&gt;注意：解混淆插件几乎不可能做到通用所有混淆，学习 ast 才能对混淆进行还原。&lt;/p&gt;
&lt;h2 id=&#34;pathtypesnode的常用方法介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pathtypesnode的常用方法介绍&#34;&gt;#&lt;/a&gt; path/types (node) 的常用方法介绍&lt;/h2&gt;
&lt;h3 id=&#34;查看节点的源代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看节点的源代码&#34;&gt;#&lt;/a&gt; 查看节点的源代码&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.toString()&lt;br&gt;
generator(node).code;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;获取 path 与 node 的源代码方式。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//babel库相关，解析，转换，构建，生产&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; types = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/types&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; generator = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/generator&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// js源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`let a = &amp;quot;hi ast&amp;quot;;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//转换为ast树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 获取path源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;path.toString: &amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; node &amp;#125; = path;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 获取node源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;generator: &amp;quot;&lt;/span&gt;, &lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(node).&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; code &amp;#125; = &lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(ast, (opts = &amp;#123; &lt;span class=&#34;attr&#34;&gt;jsescOption&lt;/span&gt;: &amp;#123; &lt;span class=&#34;attr&#34;&gt;minimal&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &amp;#125; &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 处理后的js源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(code);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;判断节点类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#判断节点类型&#34;&gt;#&lt;/a&gt; 判断节点类型&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;types.isVariableDeclarator(node,opts)&lt;br&gt;
path.isVariableDeclarator(opts)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下方 &lt;code&gt;&amp;quot;FunctionDeclaration|FunctionExpression&amp;quot;&lt;/code&gt;  这样写可同时遍历当前两种或多种类型。&lt;br&gt;
判断节点是否是需要处理的节点，下面例子中常用到的姿势都有提到。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;let a = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;const c = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function d () &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  	console.log(&amp;#x27;hi&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var e = function () &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	console.log(&amp;#x27;ok&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;FunctionDeclaration|FunctionExpression&amp;quot;&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// path方法可不传参数,默认为path.node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (path.&lt;span class=&#34;title function_&#34;&gt;isFunctionExpression&lt;/span&gt;()) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;日志1：&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;() + &lt;span class=&#34;string&#34;&gt;&amp;quot;;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 使用path方法,过滤let声明的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (path.&lt;span class=&#34;title function_&#34;&gt;isVariableDeclaration&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;kind&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;let&amp;quot;&lt;/span&gt; &amp;#125;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 使用types方法,过滤var声明的节点,第一个参数node必填&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (types.&lt;span class=&#34;title function_&#34;&gt;isVariableDeclaration&lt;/span&gt;(path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;kind&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt; &amp;#125;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;日志2：&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;日志&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;： &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;日志&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;： &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;d&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hi&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;替换节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#替换节点&#34;&gt;#&lt;/a&gt; 替换节点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.replaceInline(nodes)&lt;br&gt;
path.replaceWithMultiple()&lt;br&gt;
path.replaceWith()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;推荐使用 replacelnline 方法，它兼容其他两种方法，无脑使用 replacelnline 即可。&lt;br&gt;
types.valueToNode 方法可以将基础值转换为对应节点。&lt;br&gt;
下面这段插件可以将所有变量的值都变为 666。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var a = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var c = 3;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;replaceInline&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;节点删除&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#节点删除&#34;&gt;#&lt;/a&gt; &lt;strong&gt;节点删除&lt;/strong&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.remove()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该方法没有参数，可以将路径下的节点全部删除，使用请小心。&lt;br&gt;
下面示例将变量名为 &lt;code&gt;a&lt;/code&gt;  的 path 删除了，结果是删除了 &lt;code&gt;var a = 1;&lt;/code&gt;  这行代码。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var a = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var c = 3;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; id &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (id.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; != &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;节点插入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#节点插入&#34;&gt;#&lt;/a&gt; &lt;strong&gt;节点插入&lt;/strong&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.insertBefore (nodes) // 当前节点前插入&lt;br&gt;
 path.insertAfter (nodes) // 当前节点后插入&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;什么地方可以插入节点？&lt;br&gt;
一般在 [] 节点类型进行插入，你可以使用 Array 的方法来操作它，比如 &lt;code&gt;pop&lt;/code&gt; 、 &lt;code&gt;push&lt;/code&gt;  等等。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`var b = 1;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; != &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node = types.&lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title class_&#34;&gt;Identifier&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// types.Identifier(&amp;quot;a&amp;quot;) 生成Identifier类型节点 实参“a” 实际是 name = “a”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// types.valueToNode  将值转换为节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// console.log(generator(node).code)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;property&#34;&gt;parent&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;declarations&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;unshift&lt;/span&gt;(node); &lt;span class=&#34;comment&#34;&gt;// 等价于  path.insertBefore(node);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 构造节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node1 = types.&lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title class_&#34;&gt;Identifier&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node2 = types.&lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title class_&#34;&gt;Identifier&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// insertBefore 和 insertAfter 都支持多个node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;insertAfter&lt;/span&gt;([node1, node2]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var a = 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c = 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d = 3;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;获取父节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取父节点&#34;&gt;#&lt;/a&gt; 获取父节点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.parent&lt;br&gt;
path.parentPath&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;path.parentPath 获取的是 path，path.parent 获取的是 node，他们的关系如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;path.&lt;span class=&#34;property&#34;&gt;parent&lt;/span&gt; = path.&lt;span class=&#34;property&#34;&gt;parentPath&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;获取子孙节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取子孙节点&#34;&gt;#&lt;/a&gt; 获取子孙节点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.get(key)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;形参 key 是一个字符串，也就是路径，以。隔开。&lt;br&gt;
两种方式获取子节点。&lt;br&gt;
path.get 获取的是 &lt;code&gt;path&lt;/code&gt; ，需要 &lt;code&gt;.node&lt;/code&gt;  获取节点。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;&amp;quot;var b = 1;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;Program&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node1 = path.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;body.0.declarations.0&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node2 = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;declarations&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(node1 === node2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;获取兄弟节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取兄弟节点&#34;&gt;#&lt;/a&gt; 获取兄弟节点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.getPrevSibling () // 获取前一个兄弟节点&lt;br&gt;
 path.getAllPrevSiblings () // 获取所有的前兄弟节点&lt;br&gt;
 path.getNextSibling () // 获取后一个兄弟节点&lt;br&gt;
 path.getAllNextSiblings () // 获取所有的后兄弟节点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;获取的为 path，其中 getAllPrevSiblings，getAllNextSiblings 返回 path 列表。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var a = &amp;quot;老大&amp;quot;,b= &amp;quot;老二&amp;quot;, c =&amp;quot;老三&amp;quot;,d=&amp;quot;老四&amp;quot;,e=&amp;quot;老五&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; != &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;获取前一个兄弟节点&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;getPrevSibling&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;获取所有的前兄弟节点&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;getAllPrevSiblings&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前节点是&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;获取后一个兄弟节点&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;getNextSibling&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;获取所有的后兄弟节点&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;getAllNextSiblings&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;获取前一个兄弟节点 b = &lt;span class=&#34;string&#34;&gt;&amp;quot;老二&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;获取所有的前兄弟节点 b = &lt;span class=&#34;string&#34;&gt;&amp;quot;老二&amp;quot;&lt;/span&gt;,a = &lt;span class=&#34;string&#34;&gt;&amp;quot;老大&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;当前节点是 c = &lt;span class=&#34;string&#34;&gt;&amp;quot;老三&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;获取后一个兄弟节点 d = &lt;span class=&#34;string&#34;&gt;&amp;quot;老四&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;获取所有的后兄弟节点 d = &lt;span class=&#34;string&#34;&gt;&amp;quot;老四&amp;quot;&lt;/span&gt;,e = &lt;span class=&#34;string&#34;&gt;&amp;quot;老五&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;向上查找节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#向上查找节点&#34;&gt;#&lt;/a&gt; 向上查找节点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.findParent (callback) // 从父节点查找&lt;br&gt;
 path.find (callback) // 从当前节点查找&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;find (findParent 从父节点) 从当前 path 开始向上遍历，直到满足回调函数条件为止，找不到则返回 &lt;code&gt;null&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function a() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    function b() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        function c() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;FunctionDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; id &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//  进入最内层的d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (id.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; !== &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; find = path.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&#34;title function_&#34;&gt;isFunctionDeclaration&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; findParent = path.&lt;span class=&#34;title function_&#34;&gt;findParent&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&#34;title function_&#34;&gt;isFunctionDeclaration&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; findParent1 = path.&lt;span class=&#34;title function_&#34;&gt;findParent&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&#34;title function_&#34;&gt;isFunctionDeclaration&lt;/span&gt;() &amp;amp;&amp;amp; p.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; == &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; findParent2 = path.&lt;span class=&#34;title function_&#34;&gt;findParent&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&#34;title function_&#34;&gt;isFunctionDeclaration&lt;/span&gt;() &amp;amp;&amp;amp; p.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; == &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;find -&amp;gt; &amp;quot;&lt;/span&gt;, find.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;findParent -&amp;gt; &amp;quot;&lt;/span&gt;, findParent.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;findParent1 -&amp;gt; &amp;quot;&lt;/span&gt;, findParent1.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;findParent2 -&amp;gt; &amp;quot;&lt;/span&gt;, findParent2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;find -&amp;gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;findParent -&amp;gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;b&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;findParent1 -&amp;gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;a&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;b&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;findParent2 -&amp;gt;  &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;计算表达式的值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计算表达式的值&#34;&gt;#&lt;/a&gt; 计算表达式的值&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.evaluate()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过 evaluate 可以直接帮你把结果计算出来。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`var a = 1+2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = !![];`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; initPath = path.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;init&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; confident, value &amp;#125; = initPath.evaluate();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!confident) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    initPath.&lt;span class=&#34;title function_&#34;&gt;replaceWith&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(value));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; b = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;scopebinding-的用法介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#scopebinding-的用法介绍&#34;&gt;#&lt;/a&gt; scope&amp;amp;binding 的用法介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;资料来源 -&amp;gt; &lt;a href=&#34;https://evilrecluse.top/post/7389a59f/#%E4%BD%9C%E7%94%A8%E5%9F%9FScope-%E4%B8%8E-%E8%A2%AB%E7%BB%91%E5%AE%9A%E9%87%8FBinding&#34;&gt;作用域 Scope - 与 - 被绑定量 Binding&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;作用域-scope&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#作用域-scope&#34;&gt;#&lt;/a&gt; 作用域 Scope&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;@Babel&lt;/code&gt;  解析出来的语法树节点对象会包含作用域信息，这个信息会作为节点 &lt;code&gt;Node&lt;/code&gt;  对象的一个属性保存&lt;br&gt;
这个属性本身是一个 &lt;code&gt;Scope&lt;/code&gt;  对象，其定义位于 &lt;code&gt;node_modules/@babel/traverse/lib/scope/index.js&lt;/code&gt;  中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例：查看基本的 作用域与绑定 信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; jscode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function squire(i)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    return i * i * i;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function i()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    var i = 123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    i += 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    return 123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jscode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; visitor = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;FunctionDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n\n这里是函数 &amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;&amp;quot;()&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;dump&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, visitor);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行  &lt;code&gt;Scope.dump()&lt;/code&gt; ，会得到自底向上的 作用域与变量信息&lt;br&gt;
得到结果：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;这里是函数  squire()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# FunctionDeclaration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- i &amp;#123; constant: true, references: 3, violations: 0, kind: &amp;#x27;param&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Program&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- squire &amp;#123; constant: true, references: 0, violations: 0, kind: &amp;#x27;hoisted&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- i &amp;#123; constant: true, references: 0, violations: 0, kind: &amp;#x27;hoisted&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这里是函数  i()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# FunctionDeclaration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- i &amp;#123; constant: false, references: 0, violations: 1, kind: &amp;#x27;var&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Program&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- squire &amp;#123; constant: true, references: 0, violations: 0, kind: &amp;#x27;hoisted&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- i &amp;#123; constant: true, references: 0, violations: 0, kind: &amp;#x27;hoisted&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;输出查看方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每一个作用域都以 #标识输出&lt;/li&gt;
&lt;li&gt;每一个绑定都以 - 标识输出&lt;/li&gt;
&lt;li&gt;对于单次输出，都是自底向上的&lt;br&gt;
先输出当前作用域，再输出父级作用域，再输出父级的父级作用域……&lt;/li&gt;
&lt;li&gt;对于单个绑定 Binding，会输出 4 种信息
&lt;ul&gt;
&lt;li&gt;constant 声明后，是否会被修改&lt;/li&gt;
&lt;li&gt;references 被引用次数&lt;/li&gt;
&lt;li&gt;violations 被重新定义的次数&lt;/li&gt;
&lt;li&gt;kind 函数声明类型。param 参数，hoisted 提升，var 变量， local 内部&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后续会单独说明 Binding 对象，此处留个印象即可&lt;br&gt;
&lt;strong&gt;描述&lt;/strong&gt;&lt;br&gt;
此处从两个函数节点输出了其作用域的信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这两个函数都是定义在同一级下的，所以都会输出相同的父级作用域 Program 的信息&lt;/li&gt;
&lt;li&gt;你会发现，代码中有非常多个 i，有的是函数定义，有的是参数，有的是变量。仔细观察它们的不同之处&lt;br&gt;
解释器就是通过 不同层级的作用域 与 绑定定义信息 来区分不同的名称的量的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;绑定-binding&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绑定-binding&#34;&gt;#&lt;/a&gt; 绑定 Binding&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Binding&lt;/code&gt;  对象用于存储 绑定 的信息&lt;br&gt;
这个对象会作为 &lt;code&gt;Scope&lt;/code&gt;  对象的一个属性存在&lt;br&gt;
同一个作用域可以包含多个 Binding&lt;br&gt;
 你可以在  &lt;code&gt;@babel/traverse/lib/scope/binding.js&lt;/code&gt;  中查看到它的定义&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;显示 Binding 的信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; jscode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function a()&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    var a = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    a = a + 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    return a;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function b()&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    var b = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    var c = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    b = b - c;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    return b;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jscode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; visitor = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n此块节点源码：\n&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; bindings = path.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;bindings&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;作用域内 被绑定量 数量：&amp;quot;&lt;/span&gt;, &lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;keys&lt;/span&gt;(bindings).&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; binding_ &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; bindings) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;名字：&amp;quot;&lt;/span&gt;, binding_);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      binding_ = bindings[binding_];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;类型：&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;kind&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;定义：&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;identifier&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;是否会被修改：&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;constant&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;被修改信息信息记录&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;constantViolations&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;是否会被引用：&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;referenced&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;被引用次数&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;references&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;被引用信息NodePath记录&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;referencePaths&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, visitor);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;会输出一大堆信息。其对应的意义已经写在代码中，可以自行查看&lt;/p&gt;
&lt;h3 id=&#34;作用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#作用&#34;&gt;#&lt;/a&gt; 作用&lt;/h3&gt;
&lt;p&gt;在解混淆中，作用域与绑定 主要用来处理边界的问题&lt;br&gt;
即：某个量哪里引用了，在哪里定义&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例：删除所有定义了，却从未使用的变量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; generator = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/generator&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; jscode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var a = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function squire()&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  var c = 3;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  var d = 4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  return a * d;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  var e = 5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var f = 6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jscode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; visitor = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; func_name = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; binding = path.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getBinding&lt;/span&gt;(func_name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果变量没有被引用过，那么删除也没关系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//   此处不能用有无修改过进行判断，因为没有被修改过并不意味着没用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (binding &amp;amp;&amp;amp; !binding.&lt;span class=&#34;property&#34;&gt;referenced&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      path.&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, visitor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(ast)[&lt;span class=&#34;string&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到输出:&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;squire&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; d = &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a * d;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里使用了 Scope.getBinding () 方法来获取 Binding 对象，判断其引用情况来对语法树进行修改&lt;/p&gt;
&lt;h2 id=&#34;构建节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#构建节点&#34;&gt;#&lt;/a&gt; 构建节点&lt;/h2&gt;
&lt;h3 id=&#34;不推荐的方式需要了解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#不推荐的方式需要了解&#34;&gt;#&lt;/a&gt; 不推荐的方式（需要了解）&lt;/h3&gt;
&lt;p&gt;AST 在 js 看来就是一个 json 数据，说明可以构建 {} 的方式构建节点。&lt;br&gt;
假设我们需要构造这段代码  &lt;code&gt;var a = 0;&lt;/code&gt; &lt;br&gt;
 先使用 &lt;a href=&#34;https://astexplorer.net/&#34;&gt;ASTexplorer&lt;/a&gt; 查看该代码的 AST。&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1687105425701-0c9fd23d-f7d9-4084-8967-a1e126f706b2.png#averageHue=%23f4ee90&amp;amp;clientId=ue1ff4be4-68d2-4&amp;amp;from=paste&amp;amp;height=733&amp;amp;id=u10a8356d&amp;amp;originHeight=1100&amp;amp;originWidth=742&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=80611&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u2af3218a-f664-46c3-8de0-667e18e21aa&amp;amp;title=&amp;amp;width=494.6666666666667&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
js 源代码 &lt;code&gt;var a = 0;&lt;/code&gt;  的 JSON 数据&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;VariableDeclaration&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;declarations&amp;quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;VariableDeclarator&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Identifier&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;init&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;NumericLiteral&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;raw&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;敏锐的你发现每个节点都有 &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;end&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt;  这几个属性和其余不同的属性，这些都是必要的吗？哪些是必要的。这时需要参考 &lt;a href=&#34;https://babeljs.io/docs/babel-types&#34;&gt;https://babeljs.io/docs/babel-types&lt;/a&gt; 查看哪些是必要节点。&lt;br&gt;
以 &lt;code&gt;VariableDeclaration&lt;/code&gt;  为例。&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1686650451689-cc4f1c3d-2e3d-44b7-8890-a14bd33242f2.png#averageHue=%23f7edd0&amp;amp;clientId=ub9e050d9-ff18-4&amp;amp;from=paste&amp;amp;height=546&amp;amp;id=ue9b1d0b1&amp;amp;originHeight=819&amp;amp;originWidth=831&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=92253&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u3df98a2b-982e-49fc-b379-5650d45a88e&amp;amp;title=&amp;amp;width=554&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
 可以看到 &lt;code&gt;VariableDeclaration&lt;/code&gt;  类型的节点有两个必要的节点（ &lt;code&gt;type&lt;/code&gt;  对于任何节点都是必须的），其中 &lt;code&gt;kind&lt;/code&gt;  的类型为 &lt;code&gt;string&lt;/code&gt;  值为黄色框框框住的，而 &lt;code&gt;declarations&lt;/code&gt;  的类型则为 VariableDeclarator 数组。&lt;br&gt;
再参照其他类型节点的必要参数，简化得到下面的 ast 节点。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; astNode = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;VariableDeclaration&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;declarations&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;VariableDeclarator&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Identifier&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;init&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;NumericLiteral&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;kind&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(astNode).&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;types-函数构造节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#types-函数构造节点&#34;&gt;#&lt;/a&gt; types 函数构造节点&lt;/h3&gt;
&lt;p&gt;手搓 &lt;code&gt;ast&lt;/code&gt;  节点虽然不难，但是复杂的节点构建起来很冗余， &lt;code&gt;types&lt;/code&gt;  提供了构建 &lt;code&gt;node&lt;/code&gt;  的 &lt;code&gt;function&lt;/code&gt; ，使用它们来构造简洁高效。如图构造函数的参数及顺序。&lt;br&gt;
&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1687105795085-d60a2f32-1e90-4883-94ab-ad63cdc4a14a.png#averageHue=%23fbf9f0&amp;amp;clientId=ue1ff4be4-68d2-4&amp;amp;from=paste&amp;amp;height=169&amp;amp;id=uf299e3c9&amp;amp;originHeight=253&amp;amp;originWidth=787&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=28239&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uedb2be9d-d41e-4250-97bf-d6df8c61d9d&amp;amp;title=&amp;amp;width=524.6666666666666&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; astNode = types.&lt;span class=&#34;title function_&#34;&gt;variableDeclaration&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt;, [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  types.&lt;span class=&#34;title function_&#34;&gt;variableDeclarator&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;identifier&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;), types.&lt;span class=&#34;title function_&#34;&gt;numericLiteral&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(astNode).&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;template-快速构造节点推荐&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#template-快速构造节点推荐&#34;&gt;#&lt;/a&gt; template 快速构造节点（推荐）&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;types.xxx&lt;/code&gt;  来构建节点虽然简洁了不少，但还是觉着繁琐。那么使用 &lt;code&gt;template&lt;/code&gt;  绝对会让你眼前一亮。&lt;br&gt;
假设需要构建 &lt;code&gt;var a = 0,b = 1,c = 2;&lt;/code&gt;  使用手搓或 &lt;code&gt;types.xxx&lt;/code&gt;  都很繁琐，那么试试新姿势吧！别忘了导包哦！&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; template = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/template&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;variable constant_&#34;&gt;VAR_NODE&lt;/span&gt; = &lt;span class=&#34;title function_&#34;&gt;template&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`var A = 0,B = 1, C = 2`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里定义了 &lt;code&gt;VAR_NODE&lt;/code&gt;  变量，其中 &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;C&lt;/code&gt;  类似于占位符 &lt;code&gt;VAR_NODE&lt;/code&gt;  接收一个参数 &lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt; , &lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt;  的 &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;C&lt;/code&gt;  这几个属性需要分别构造， &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;C&lt;/code&gt;  等价于 &lt;code&gt;VariableDeclarator&lt;/code&gt;  节点的 &lt;code&gt;id&lt;/code&gt;  属性，也就是 &lt;code&gt;identifier&lt;/code&gt;  节点，直接字符串也可以（标识符类型）。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; astNode = &lt;span class=&#34;title function_&#34;&gt;VAR_NODE&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;A&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;B&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;C&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(astNode).&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到输出:&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  b = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  c = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;特性介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特性介绍&#34;&gt;#&lt;/a&gt; 特性介绍&lt;/h2&gt;
&lt;h3 id=&#34;同时遍历多个类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#同时遍历多个类型&#34;&gt;#&lt;/a&gt; 同时遍历多个类型&lt;/h3&gt;
&lt;p&gt;假设需要同时遍历多个类型，可以这样写插件，这样写一个方法处理两种类型的节点。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;let a = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;let b = 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function d () &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  	console.log(&amp;#x27;hi&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;FunctionDeclaration|VariableDeclaration&amp;quot;&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还可以这样写单独处理各自的类型的节点。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;FunctionDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;() + &lt;span class=&#34;string&#34;&gt;&amp;quot;;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;pathtraversestate&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pathtraversestate&#34;&gt;#&lt;/a&gt; path.traverse&lt;state&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;注意： path.traverse !== traverse&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在  &lt;code&gt;path.traverse&lt;/code&gt;  方法中， &lt;code&gt;state&lt;/code&gt;  参数是一个对象，用于在遍历过程中保存和传递状态信息。你可以在访问器函数中使用  &lt;code&gt;state&lt;/code&gt;  对象来存储和更新任何你需要的信息。&lt;br&gt;
 &lt;code&gt;state&lt;/code&gt;  对象在遍历开始时由  &lt;code&gt;path.traverse&lt;/code&gt;  方法创建并传递给每个访问器函数。你可以在访问器函数中修改  &lt;code&gt;state&lt;/code&gt;  对象，以跟踪遍历过程中的状态。这些修改将在遍历过程中保留下来，并且在访问器函数之间共享。&lt;br&gt;
以下是一个示例，展示了如何在  &lt;code&gt;path.traverse&lt;/code&gt;  中使用  &lt;code&gt;state&lt;/code&gt;  对象：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; code = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function a() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    function b() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        function c() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(code);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; state = &amp;#123; &lt;span class=&#34;attr&#34;&gt;counter&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; visitors = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;enter&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;path, state&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 在进入节点之前进行操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      state.&lt;span class=&#34;property&#34;&gt;counter&lt;/span&gt;++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;path, state&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 在离开节点之后进行操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;遍历了&amp;quot;&lt;/span&gt;, state.&lt;span class=&#34;property&#34;&gt;counter&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;个节点&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(visitors, state);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上面的示例中，我们创建了一个包含  &lt;code&gt;counter&lt;/code&gt;  属性的  &lt;code&gt;state&lt;/code&gt;  对象，并在  &lt;code&gt;enter&lt;/code&gt;  和  &lt;code&gt;exit&lt;/code&gt;  访问器中使用它来跟踪遍历的节点数量。在遍历开始时，我们将  &lt;code&gt;state&lt;/code&gt;  对象作为第三个参数传递给  &lt;code&gt;path.traverse&lt;/code&gt;  方法。然后，在每个访问器函数中，我们都可以使用和修改  &lt;code&gt;state&lt;/code&gt;  对象。在  &lt;code&gt;enter&lt;/code&gt;  访问器中，我们增加了  &lt;code&gt;counter&lt;/code&gt;  的值；在  &lt;code&gt;exit&lt;/code&gt;  访问器中，我们打印了遍历的节点数量。&lt;br&gt;
通过使用  &lt;code&gt;state&lt;/code&gt;  对象，你可以在遍历过程中跟踪和存储任何你需要的信息，并在访问器函数中进行相应的操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意 traverse 并没有 state 参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1697874762901-eefdfac9-151e-4c07-9505-60de6509089a.png#averageHue=%233b4045&amp;amp;clientId=uf5705079-0976-4&amp;amp;from=paste&amp;amp;height=375&amp;amp;id=u7a4f70bc&amp;amp;originHeight=562&amp;amp;originWidth=502&amp;amp;originalType=binary%E2%88%B6=1.5&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=55333&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ub8b35eda-7f71-401f-92d4-b7933928ffd&amp;amp;title=&amp;amp;width=334.6666666666667&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;babelgeneratoroptions&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#babelgeneratoroptions&#34;&gt;#&lt;/a&gt; babel/generator&lt;options&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;babel/generator&lt;/code&gt;  的  &lt;code&gt;options&lt;/code&gt;  参数包括以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filename&lt;/code&gt; : 字符串，指定正在生成的文件的路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceMap&lt;/code&gt; : 可选，是一个布尔值，指示是否生成 source map。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceMapName&lt;/code&gt; : 可选，是一个字符串或函数，指定生成的 source map 的名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceFileName&lt;/code&gt; : 可选，是一个字符串或函数，指定源文件的名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceRoot&lt;/code&gt; : 可选，是一个字符串或函数，指定源文件的根目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;moduleRoot&lt;/code&gt; : 可选，是一个字符串或函数，指定模块的根目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;moduleId&lt;/code&gt; : 可选，是一个字符串或函数，指定生成的模块的 ID。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;looseModules&lt;/code&gt; : 可选，是一个布尔值，指示是否使用 loose 模块模式。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;esModules&lt;/code&gt; : 可选，是一个布尔值，指示是否使用 ES6 模块。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceType&lt;/code&gt; : 可选，是一个字符串或函数，指定源代码的类型（例如 “script” 或 “module”）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;requires&lt;/code&gt; : 可选，是一个数组，包含需要生成的 require 语句。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plugins&lt;/code&gt; : 可选，是一个数组，包含要应用的插件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;retainLines&lt;/code&gt; : 可选，是一个布尔值，指示是否保留行号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;comments&lt;/code&gt; : 可选，是一个布尔值或函数，指示是否保留注释。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compact&lt;/code&gt; : 可选，“auto” 或 “true” 表示启用压缩；“false” 表示禁用压缩；“true” 表示在压缩时忽略一些不必要的空白符；“紊” 表示在压缩时保留所有空白符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minified&lt;/code&gt; : 可选，是一个布尔值，指示是否启用最小化。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uglify&lt;/code&gt; : 可选，是一个布尔值或对象，指示是否启用 UglifyJS 风格的压缩。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beautify: true&lt;/code&gt;  可选，启用美化输出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asciiOnly&lt;/code&gt; : 可选，一个布尔值，指示是否将 Unicode 字符转换为 ASCII 字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quoteKeys&lt;/code&gt; : 可选，一个布尔值，指示是否在对象字面量中保留键名。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="AST" />
        <updated>2023-09-27T13:12:49.000Z</updated>
    </entry>
</feed>
